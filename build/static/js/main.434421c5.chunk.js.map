{"version":3,"sources":["serviceWorkerRegistration.js","utils/firebase-config.js","store/atoms/appState.js","contexts/AuthContext.jsx","static/images/logo_x.png","components/Login.jsx","static/images/background.png","pages/LoginPage.jsx","components/ResetPassword.jsx","pages/ForgetPassword.jsx","components/TopBar.jsx","pages/AppLayout.jsx","pages/Customer.jsx","pages/Home.jsx","pages/Users.jsx","components/PaymentType.jsx","components/PaymentDate.jsx","pages/EditCustomer.jsx","pages/Draw.jsx","components/CustomerDialog.jsx","pages/ManageDraw.jsx","pages/ManageCustomer.jsx","App.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","firebaseConfig","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","REACT_APP_FIREBASE_MEASUREMENT_ID","app","initializeApp","auth","getAuth","appdb","getFirestore","getStorage","headerTextState","atom","key","default","userDetailsState","customerState","selectedCustomerState","drawState","customerSearchState","allCustomerState","manageDrawState","newCustomerDraw","customerId","customerPhone","customerName","payment","id","month","paymentDate","paymentMethod","updatedBy","monthState","userState","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","setUserDetails","useSetRecoilState","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","getDoc","doc","email","response","data","value","login","password","signInWithEmailAndPassword","logout","signOut","signup","createUserWithEmailAndPassword","resetPassword","sendPasswordResetEmail","removeUser","deleteUser","Provider","Login","loginEmail","setLoginEmail","loginPassword","setLoginPassword","showPassword","setShowPassword","setError","navigate","useNavigate","useLocation","handleSubmit","e","a","preventDefault","path","message","Grid","Paper","elevation","sx","padding","mr","ml","maxWidth","align","Box","component","height","alt","src","Logo","Typography","variant","gutterBottom","Alert","severity","FormControl","margin","fullWidth","required","borderRadius","InputLabel","htmlFor","OutlinedInput","type","onChange","event","target","endAdornment","InputAdornment","position","IconButton","edge","Person","label","onKeyDown","onClick","onMouseDown","VisibilityOff","Visibility","Button","background","border","boxShadow","color","mt","disabled","Divider","display","justifyContent","flexWrap","to","LoginPage","Container","BgrImage","backgroundSize","backgroundPosition","alignItems","flexDirection","width","spacing","justify","ResetPassword","setEmail","ForgetPassword","TopBar","menuAnchorEl","setMenuAnchorEl","accountAnchorEl","setAccountAnchorEl","openMenu","openAccount","headerText","useRecoilValue","handleMenuClose","AppBar","Toolbar","className","size","currentTarget","flexGrow","AccountCircle","Menu","anchorEl","open","onClose","MenuListProps","MenuList","MenuItem","Link","ListItemIcon","fontSize","ListItemText","AppLayout","setHeaderText","errorMsg","Snackbar","anchorOrigin","vertical","horizontal","Search","styled","theme","shape","backgroundColor","alpha","palette","common","white","marginLeft","marginTop","breakpoints","up","SearchIconWrapper","pointerEvents","StyledInputBase","InputBase","paddingLeft","transition","transitions","create","Customers","setCustomer","setSelectedCustomer","useRecoilState","customers","setDispCustomer","isLoading","setIsLoading","handleEditCustomer","dataset","custid","selectedCustomer","filter","customer","handleCustomerSearch","toLowerCase","length","collectionRef","query","collection","where","onSnapshot","snapshot","docs","map","container","direction","item","xs","sm","md","placeholder","inputProps","LinearProgress","Card","borderBottom","CardActionArea","CardContent","lg","m","noValidate","autoComplete","TextField","defaultValue","InputProps","readOnly","Home","setCustomerCount","customerCountState","setDrawCount","drawCountState","draw","setDraw","fetchCustomerCount","docRef","getDocs","count","fetchDraw","CardHeader","title","Users","subsemail","subslicensecount","subsname","subscription","setSubscription","licenseCount","setLicenseCount","userCount","setUserCount","remainingUserCount","setRemainingUserCount","usersAccounts","setUsersAccounts","rolesLov","setRolesLov","openNewUser","setOpenNewUser","newUserError","setNewUserError","usrid","usrfname","usrlname","usrrole","usremail","editUser","setEditUser","openEditUser","setOpenEditUser","userValidationSchema","Yup","useForm","resolver","yupResolver","control","reset","errors","formState","handleCreateUser","new_user","subsid","createdby","createdon","serverTimestamp","modifiedby","modifiedon","q","empty","setDoc","handleEditUserInputChnage","name","handleEditUser","usr_edit","handleUpdateUser","updateDoc","handleDeleteUser","deleteDoc","handleClose","fetchSubscription","Object","keys","subsRef","fetchUsers","unsubscribe","fetchUserLov","mb","alignContent","userAccount","rowSpacing","columnSpacing","fontWeight","FormLabel","Dialog","DialogTitle","onSubmit","DialogContent","inputRef","render","field","Select","roles","val","DialogActions","blue","grey","StyledButton","mode","selectUnstyledClasses","focusVisible","expanded","StyledListbox","StyledOption","OptionUnstyled","optionUnstyledClasses","selected","highlighted","StyledPopper","PopperUnstyled","CustomSelect","props","ref","components","Root","Listbox","Popper","SelectUnstyled","updateRecord","PaymentMethod","method","produce","draft","RowID","PaymentDate","setValue","date","LocalizationProvider","dateAdapter","DateFnsUtils","DatePicker","newValue","renderInput","format","formattedDate","getMonth","getDate","getFullYear","optionChange","EditCustomers","months","customerExists","TableContainer","Table","minWidth","TableHead","TableRow","TableCell","TableBody","i","scope","selectedDrawData","setManageDraw","handleDrawClick","drawId","drawid","selectedDraw","d","formatDate","Date","day","year","join","handleAddDraw","maxId","test","undefined","Math","max","apply","o","customerCount","startedOn","status","data1","push","checkdraw","CustomerDialog","setOpen","phone","address","values","setValues","set","oldValues","autoFocus","ManageDraw","addcustomer","setAddcustomer","newCustomer","setNewCustomer","localCustomer","setLocalCustomer","manageDraw","newCustDraw","drawExists","handleAddCustomer","customerDrawId","collectionRef1","allCities","c","ManageCustomer","allCustomers","setAllCustomer","checkCustomer","RequireAuth","replace","pathname","App","element","rootElement","document","getElementById","ReactDOM","StrictMode","CssBaseline","URL","href","origin","addEventListener","fetch","headers","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.434421c5.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://cra.link/PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport { getStorage } from \"firebase/storage\";\r\n\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Initialize Firebase\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\n\r\n\r\n\r\nexport const auth = getAuth(app);\r\nexport const appdb = getFirestore(app);\r\nexport const appstorage = getStorage(app);\r\n","import { atom } from \"recoil\";\r\n\r\n/////////Global States/////////////\r\nexport const headerTextState = atom({\r\n  key: \"headertext\",\r\n  default: \"PunjabJewellers - Global\",\r\n});\r\n\r\nexport const userDetailsState = atom({\r\n  key: \"userdetail\",\r\n  default: {},\r\n});\r\n\r\n/////////Customer States//////////////////\r\nexport const customerState = atom({\r\n  key: \"customer\",\r\n  default: {},\r\n});\r\n\r\nexport const selectedCustomerState = atom({\r\n  key: \"customer\",\r\n  default: {},\r\n});\r\n\r\nexport const drawState = atom({\r\n  key: \"drawState\",\r\n  default: [],\r\n});\r\n\r\nexport const customerCountState = atom({\r\n  key: \"customerCount\",\r\n  default: 0,\r\n});\r\n\r\nexport const drawCountState = atom({\r\n  key: \"drawCount\",\r\n  default: 0,\r\n});\r\n\r\nexport const customerSearchState = atom({\r\n  key: \"customers\",\r\n  default: [],\r\n});\r\n\r\nexport const allCustomerState = atom({\r\n  key: \"allcustomer\",\r\n  default: [],\r\n});\r\n\r\n\r\nexport const manageDrawState = atom({\r\n  key: \"manageDraw\",\r\n  default: {},\r\n});\r\n\r\nexport const DispCustomerState = atom({\r\n  key: \"Customer\",\r\n  default: [],\r\n});\r\n\r\n\r\nexport const productsState = atom({\r\n  key: \"products\",\r\n  default: [],\r\n});\r\n\r\nexport const usersState = atom({\r\n  key: \"users\",\r\n  default: [],\r\n});\r\n\r\nexport const appointmentsState = atom({\r\n  key: \"appointments\",\r\n  default: [],\r\n});\r\n\r\nexport const editVisitState = atom({\r\n  key: \"editvisit\",\r\n  default: \"\",\r\n});\r\n\r\nexport const phoneNoState = atom({\r\n  key: \"phoneNumbers\",\r\n  default: []\r\n}) \r\n\r\nexport const newCustomerDraw = atom({\r\nkey: \"customerDraw\",\r\ndefault: {\r\n  customerId: \"\",\r\n  customerPhone: \"\",\r\n  customerName: \"\",\r\n  payment: [\r\n      {id:1,month: 'January',paymentDate: \"\",paymentMethod: \"\", updatedBy:\"\"},\r\n        {id:2,month: 'February',paymentDate: \"\",paymentMethod: \"\", updatedBy:\"\"},\r\n        {id:3,month: 'March',paymentDate: \"\",paymentMethod: \"\", updatedBy:\"\"},\r\n        {id:4,month: 'April',paymentDate: \"\",paymentMethod: \"\", updatedBy:\"\"},\r\n        {id:5,month: 'May',paymentDate: \"\",paymentMethod: \"\", updatedBy:\"\"},\r\n        {id:6,month: 'June',paymentDate: \"\",paymentMethod: \"\", updatedBy:\"\"},\r\n        {id:7,month: 'July',paymentDate: \"\",paymentMethod: \"\", updatedBy:\"\"},\r\n        {id:8,month: 'August',paymentDate: \"\",paymentMethod: \"\", updatedBy:\"\"},\r\n        {id:9,month: 'September',paymentDate: \"\",paymentMethod: \"\", updatedBy:\"\"},\r\n        {id:10,month: 'October',paymentDate: \"\",paymentMethod: \"\", updatedBy:\"\"},\r\n        {id:11,month: 'November',paymentDate: \"\",paymentMethod: \"\", updatedBy:\"\"},\r\n        {id:12,month: 'December',paymentDate: \"\",paymentMethod: \"\", updatedBy:\"\"}\r\n  ]\r\n \r\n}\r\n})\r\n\r\nexport const monthState = atom({\r\n  key: \"months\",\r\n  default: [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\"\r\n  ]\r\n}) \r\n\r\nexport const draw_detail = atom({\r\n  key: \"draw\",\r\n  default: {\r\n    customerId: \"07846861338-c\",\r\n    customerPhone: \"07846861338\",\r\n    payment: [\r\n        {id:1,month: 'January',paymentDate: \"2022-02-28\",paymentMethod: \"Cash\"},\r\n          {id:2,month: 'February',paymentDate: \"2022-02-28\",paymentMethod: \"Card\"},\r\n          {id:3,month: 'March',paymentDate: \"\",paymentMethod: \"\"},\r\n          {id:4,month: 'April',paymentDate: \"\",paymentMethod: \"\"},\r\n          {id:5,month: 'May',paymentDate: \"\",paymentMethod: \"\"},\r\n          {id:6,month: 'June',paymentDate: \"\",paymentMethod: \"\"},\r\n          {id:7,month: 'July',paymentDate: \"\",paymentMethod: \"\"},\r\n          {id:8,month: 'August',paymentDate: \"\",paymentMethod: \"\"},\r\n          {id:9,month: 'September',paymentDate: \"\",paymentMethod: \"\"},\r\n          {id:10,month: 'October',paymentDate: \"\",paymentMethod: \"\"},\r\n          {id:11,month: 'November',paymentDate: \"\",paymentMethod: \"\"},\r\n          {id:12,month: 'December',paymentDate: \"\",paymentMethod: \"\"}\r\n    ]\r\n  }\r\n});\r\nexport const userState = atom({\r\n  key: \"userEmail\",\r\n  default: \"\",\r\n});\r\n\r\n\r\nconst appState = {\r\n  customerSearchState,\r\n  customerCountState,\r\n  headerTextState,\r\n  userDetailsState,\r\n  productsState,\r\n  appointmentsState,\r\n  editVisitState,\r\n  DispCustomerState,\r\n  phoneNoState,\r\n  monthState,\r\n  draw_detail,\r\n  customerState,\r\n  selectedCustomerState,\r\n  drawState,\r\n  manageDrawState,\r\n  userState,\r\n  newCustomerDraw\r\n};\r\n\r\nexport default appState;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport {\r\n  signInWithEmailAndPassword,\r\n  createUserWithEmailAndPassword,\r\n  signOut,\r\n  sendPasswordResetEmail,\r\n  deleteUser,\r\n} from \"firebase/auth\";\r\nimport { auth, appdb } from \"../utils/firebase-config\";\r\nimport { getDoc, doc } from \"@firebase/firestore\";\r\n\r\nimport { userDetailsState } from \"../store/atoms/appState\";\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const setUserDetails = useSetRecoilState(userDetailsState);\r\n  const [currentUser, setCurrentUser] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  function signup(email, password) {\r\n    return createUserWithEmailAndPassword(auth, email, password);\r\n  }\r\n\r\n  function login(email, password) {\r\n    return signInWithEmailAndPassword(auth, email, password);\r\n  }\r\n\r\n  function logout() {\r\n    return signOut(auth);\r\n  }\r\n\r\n  function resetPassword(email) {\r\n    return sendPasswordResetEmail(auth, email);\r\n  }\r\n\r\n  function removeUser(email) {\r\n    return deleteUser(auth, email);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        getDoc(doc(appdb, \"userrole\", user.email)).then((response) => {\r\n          setUserDetails(response.data());\r\n        });\r\n      }\r\n\r\n      setCurrentUser(user);\r\n      setLoading(false);\r\n    });\r\n    return unsubscribe;\r\n  }, [setUserDetails]);\r\n\r\n  const value = {\r\n    currentUser,\r\n    login,\r\n    logout,\r\n    signup,\r\n    resetPassword,\r\n\r\n    removeUser,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo_x.81874b8a.png\";","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Link, useNavigate, useLocation } from \"react-router-dom\";\r\n\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  Box,\r\n  Button,\r\n  Divider,\r\n  FormControl,\r\n  InputLabel,\r\n  OutlinedInput,\r\n  InputAdornment,\r\n  IconButton,\r\n  Alert,\r\n} from \"@mui/material\";\r\n\r\nimport { VisibilityOff, Visibility, Person } from \"@mui/icons-material\";\r\n\r\nimport Logo from \"../static/images/logo_x.png\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\n\r\nexport default function Login() {\r\n  const [loginEmail, setLoginEmail] = useState(\"\");\r\n  const [loginPassword, setLoginPassword] = useState(\"\");\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n  const { state } = useLocation();\r\n  const { login } = useAuth();\r\n\r\n  async function handleSubmit(e) {\r\n    console.log(process.env.REACT_APP_FIREBASE_API_KEY)\r\n    e?.preventDefault();\r\n    try {\r\n      setError(\"\");\r\n      setLoading(true);\r\n      await login(loginEmail, loginPassword);\r\n      navigate(state.path || \"/\");\r\n    } catch (error) {\r\n      setError(\"Failed to login: \" + error.message);\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n  return (\r\n    <Grid>\r\n      <Paper\r\n        elevation={10}\r\n        sx={{ padding: 2, mr: \"10px\", ml: \"10px\", maxWidth: 300 }}\r\n      >\r\n        <Grid align=\"center\">\r\n          <Box\r\n            component=\"img\"\r\n            sx={{\r\n              height: 64,\r\n            }}\r\n            alt=\"Punjab Jeweller\"\r\n            src={Logo}\r\n          />\r\n\r\n          <Typography variant=\"subtitle1\" gutterBottom component=\"div\">\r\n            Log In\r\n          </Typography>\r\n        </Grid>\r\n\r\n        {error && <Alert severity=\"error\">{error}</Alert>}\r\n\r\n        <FormControl\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          fullWidth\r\n          required\r\n          sx={{\r\n            \"& .MuiOutlinedInput-root\": {\r\n              borderRadius: 5,\r\n            },\r\n          }}\r\n        >\r\n          <InputLabel htmlFor=\"outlined-adornment-email\">Username</InputLabel>\r\n          <OutlinedInput\r\n            id=\"outlined-adornment-email\"\r\n            type=\"text\"\r\n            value={loginEmail}\r\n            onChange={(event) => {\r\n              setLoginEmail(event.target.value);\r\n            }}\r\n            endAdornment={\r\n              <InputAdornment position=\"end\">\r\n                <IconButton aria-label=\"person\" edge=\"end\">\r\n                  <Person />\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n            label=\"Username\"\r\n          />\r\n        </FormControl>\r\n        <FormControl\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          fullWidth\r\n          required\r\n          sx={{\r\n            \"& .MuiOutlinedInput-root\": {\r\n              borderRadius: 5,\r\n            },\r\n          }}\r\n        >\r\n          <InputLabel htmlFor=\"outlined-adornment-password\">\r\n            Password\r\n          </InputLabel>\r\n          <OutlinedInput\r\n            id=\"outlined-adornment-password\"\r\n            type={showPassword ? \"text\" : \"password\"}\r\n            value={loginPassword}\r\n            onChange={(event) => {\r\n              setLoginPassword(event.target.value);\r\n            }}\r\n            onKeyDown={(e) => {\r\n              if (e.key === \"Enter\") {\r\n                handleSubmit();\r\n              }\r\n            }}\r\n            endAdornment={\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"toggle password visibility\"\r\n                  onClick={() => {\r\n                    setShowPassword(!showPassword);\r\n                  }}\r\n                  onMouseDown={(event) => {\r\n                    event.preventDefault();\r\n                  }}\r\n                  edge=\"end\"\r\n                >\r\n                  {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n            label=\"Password\"\r\n          />\r\n        </FormControl>\r\n\r\n        <Button\r\n          sx={{\r\n            background: \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",\r\n            border: 0,\r\n            borderRadius: 3,\r\n            boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\",\r\n            color: \"white\",\r\n            height: 48,\r\n            padding: \"0 30px\",\r\n            mt: \"25px\",\r\n          }}\r\n          type=\"submit\"\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          fullWidth\r\n          disabled={loading}\r\n          onClick={handleSubmit}\r\n        >\r\n          Sign in\r\n        </Button>\r\n\r\n        <Divider sx={{ padding: \"5px\" }} />\r\n\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            flexWrap: \"wrap\",\r\n          }}\r\n        >\r\n          <Typography sx={{ mt: \"15px\" }}>\r\n            <Link to=\"/forgot-password\">Forgot password?</Link>\r\n          </Typography>          \r\n        </Box>\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/background.b35c8abd.png\";","import React from \"react\";\r\nimport Login from \"../components/Login\";\r\nimport \"../App.css\";\r\n\r\nimport { Container } from \"@mui/material\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nimport BgrImage from \"../static/images/background.png\";\r\n\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\n\r\nexport default function LoginPage() {\r\n  const { currentUser } = useAuth();\r\n\r\n  return currentUser ? (\r\n    <Navigate to=\"/\" />\r\n  ) : (\r\n    <Container\r\n      sx={{\r\n        background:\r\n          \"linear-gradient(rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.418)),url(\" +\r\n          BgrImage +\r\n          \")\",\r\n        backgroundSize: \"cover\",\r\n        backgroundPosition: \"center\",\r\n\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        margin: 0,\r\n        width: \"100vw\",\r\n        height: \"100vh\",\r\n        spacing: 0,\r\n        justify: \"space-around\",\r\n      }}\r\n    >\r\n      <Login />\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Box,\r\n  Typography,\r\n  Alert,\r\n  FormControl,\r\n  InputLabel,\r\n  OutlinedInput,\r\n  InputAdornment,\r\n  IconButton,\r\n  Button,\r\n  Divider,\r\n} from \"@mui/material\";\r\nimport { Person } from \"@mui/icons-material\";\r\n\r\nimport Logo from \"../static/images/logo_x.png\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\n\r\nexport default function ResetPassword() {\r\n  const [error, setError] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const { resetPassword } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  async function handleSubmit(e) {\r\n    e?.preventDefault();\r\n    try {\r\n      setError(\"\");\r\n      setLoading(true);\r\n      await resetPassword(email);\r\n      navigate(\"/login\");\r\n    } catch (error) {\r\n      setError(\"Failed to rest password: \" + error.message);\r\n    }\r\n    setLoading(false);\r\n  }\r\n  return (\r\n    <Grid>\r\n      <Paper\r\n        elevation={10}\r\n        sx={{ padding: 2, mr: \"10px\", ml: \"10px\", maxWidth: 300 }}\r\n      >\r\n        <Grid align=\"center\">\r\n          <Box\r\n            component=\"img\"\r\n            sx={{\r\n              height: 64,\r\n            }}\r\n            alt=\"Punjab Jeweller\"\r\n            src={Logo}\r\n          />\r\n\r\n          <Typography variant=\"subtitle1\" gutterBottom component=\"div\">\r\n            Password Reset\r\n          </Typography>\r\n        </Grid>\r\n\r\n        {error && <Alert severity=\"error\">{error}</Alert>}\r\n\r\n        <FormControl\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          fullWidth\r\n          required\r\n          sx={{\r\n            \"& .MuiOutlinedInput-root\": {\r\n              borderRadius: 5,\r\n            },\r\n          }}\r\n        >\r\n          <InputLabel htmlFor=\"outlined-adornment-email\">Username</InputLabel>\r\n          <OutlinedInput\r\n            id=\"outlined-adornment-email\"\r\n            type=\"text\"\r\n            value={email}\r\n            onChange={(event) => {\r\n              setEmail(event.target.value);\r\n            }}\r\n            endAdornment={\r\n              <InputAdornment position=\"end\">\r\n                <IconButton aria-label=\"person\" edge=\"end\">\r\n                  <Person />\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n            label=\"Username\"\r\n          />\r\n        </FormControl>\r\n\r\n        <Button\r\n          sx={{\r\n            background: \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",\r\n            border: 0,\r\n            borderRadius: 3,\r\n            boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\",\r\n            color: \"white\",\r\n            height: 48,\r\n            padding: \"0 30px\",\r\n            mt: \"25px\",\r\n          }}\r\n          type=\"submit\"\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          fullWidth\r\n          disabled={loading}\r\n          onClick={handleSubmit}\r\n        >\r\n          Reset Password\r\n        </Button>\r\n\r\n        <Divider sx={{ padding: \"5px\" }} />\r\n\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            flexWrap: \"wrap\",\r\n          }}\r\n        >\r\n          <Typography sx={{ mt: \"15px\" }}>\r\n            <Link to=\"/login\">Login</Link>\r\n          </Typography>\r\n          <Typography sx={{ mt: \"15px\" }}>\r\n            <Link to=\"https://uxli.com\">www.uxli.com</Link>\r\n          </Typography>\r\n        </Box>\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport { Container } from \"@mui/material\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nimport BgrImage from \"../static/images/background.png\";\r\n\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport ResetPassword from \"../components/ResetPassword\";\r\n\r\nexport default function ForgetPassword() {\r\n  const { currentUser } = useAuth();\r\n\r\n  return currentUser ? (\r\n    <Navigate to=\"/\" />\r\n  ) : (\r\n    <Container\r\n      maxWidth={false}\r\n      sx={{\r\n        background:\r\n          \"linear-gradient(rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.418)),url(\" +\r\n          BgrImage +\r\n          \")\",\r\n        backgroundSize: \"cover\",\r\n        backgroundPosition: \"center\",\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        margin: 0,\r\n      }}\r\n    >\r\n      <ResetPassword />\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  Typography,\r\n  Menu,\r\n  MenuItem,\r\n  Alert,\r\n  Button,\r\n  Paper,\r\n  MenuList,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Divider,\r\n} from \"@mui/material\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport DashboardIcon from \"@mui/icons-material/Dashboard\";\r\nimport PeopleIcon from \"@mui/icons-material/People\";\r\nimport CategoryIcon from \"@mui/icons-material/Category\";\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport { AccountCircle } from \"@mui/icons-material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { headerTextState, userState } from \"../store/atoms/appState\";\r\nimport { auth } from \"../utils/firebase-config\";\r\n\r\nimport * as dbService from \"../utils/firestore\";\r\n\r\nexport default function TopBar() {\r\n  const [menuAnchorEl, setMenuAnchorEl] = useState(null);\r\n  const [accountAnchorEl, setAccountAnchorEl] = useState(null);\r\n  const openMenu = Boolean(menuAnchorEl);\r\n  const openAccount = Boolean(accountAnchorEl);\r\n  const setUser = useSetRecoilState(userState);\r\n\r\n  const headerText = useRecoilValue(headerTextState);\r\n\r\n  const { logout } = useAuth();\r\n  const [error, setError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  \r\n  async function handleLogout() {\r\n    setError(\"\");\r\n    try {\r\n      await logout();\r\n      navigate(\"/login\");\r\n    } catch (error) {\r\n      setError(\"Failed to logout: \" + error.message);\r\n    }\r\n  }\r\n\r\n  \r\n  async function handleHomePage() {\r\n      navigate(\"/\");\r\n  }\r\n\r\n  const handleMenuClick = (event) => {\r\n    setMenuAnchorEl(event.currentTarget);\r\n  };\r\n  const handleMenuClose = () => {\r\n    setMenuAnchorEl(null);\r\n  };\r\n\r\n  const handleAccountClick = (event) => {\r\n    setAccountAnchorEl(event.currentTarget);\r\n  };\r\n  const handleAccountClose = () => {\r\n    setAccountAnchorEl(null);\r\n  };\r\n  async function handleCustomer(){ \r\n    try {\r\n      await dbService.handleCreateCustomer()\r\n    } catch (error) {\r\n      console.log(\"error adding customer\" + error)\r\n    }\r\n  };\r\n\r\n  \r\n  useEffect(() => {\r\n   \r\n  }, []);\r\n\r\n\r\n  return (\r\n    <div>\r\n      <AppBar>\r\n        <Toolbar variant=\"dense\" className=\"background\">\r\n          <IconButton\r\n            size=\"large\"\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            sx={{ mr: 2 }}\r\n            onClick={handleMenuClick}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          {/* <IconButton\r\n            size=\"large\"\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"home\"\r\n            sx={{ mr: 2 }}\r\n            onClick={handleCustomer}\r\n          >\r\n            <EmailIcon />\r\n          </IconButton> */}\r\n          \r\n          <IconButton\r\n            size=\"large\"\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"home\"\r\n            sx={{ mr: 2 }}\r\n            onClick={handleHomePage}\r\n          >\r\n            <HomeIcon />\r\n          </IconButton>\r\n\r\n          <Typography\r\n            variant=\"h6\"\r\n            component=\"div\"\r\n            align=\"center\"\r\n            sx={{ flexGrow: 1 }}\r\n          >\r\n            {headerText}\r\n          </Typography>\r\n          <IconButton\r\n            size=\"large\"\r\n            aria-label=\"account of current user\"\r\n            aria-controls=\"menu-appbar\"\r\n            aria-haspopup=\"true\"\r\n            onClick={handleAccountClick}\r\n            color=\"inherit\"\r\n          >\r\n            <AccountCircle />\r\n          </IconButton>\r\n        </Toolbar>\r\n\r\n      </AppBar>\r\n      <Toolbar />\r\n      <Paper sx={{ width: 320, maxWidth: \"100%\" }}>\r\n        <Menu\r\n          sx={{ width: 320, maxWidth: \"100%\" }}\r\n          id=\"app-menu\"\r\n          anchorEl={menuAnchorEl}\r\n          open={openMenu}\r\n          onClose={handleMenuClose}\r\n          MenuListProps={{\r\n            \"aria-labelledby\": \"basic-button\",\r\n          }}\r\n        >\r\n          <MenuList>\r\n            <MenuItem onClick={handleMenuClose} component={Link} to={\"/\"}>\r\n              <ListItemIcon>\r\n                <DashboardIcon fontSize=\"small\" />\r\n              </ListItemIcon>\r\n              <ListItemText>Home</ListItemText>\r\n            </MenuItem>\r\n           \r\n            <Divider />\r\n            <MenuItem\r\n              onClick={handleMenuClose}\r\n              component={Link}\r\n              to={\"customers\"}\r\n            >\r\n              <ListItemIcon>\r\n                <PeopleIcon fontSize=\"small\" />\r\n              </ListItemIcon>\r\n              <ListItemText>Customers</ListItemText>\r\n            </MenuItem>\r\n            <MenuItem\r\n              onClick={handleMenuClose}\r\n              component={Link}\r\n              to={\"products\"}\r\n            >\r\n              <ListItemIcon>\r\n                <CategoryIcon fontSize=\"small\" />\r\n              </ListItemIcon>\r\n              <ListItemText>Draws</ListItemText>\r\n            </MenuItem>\r\n           \r\n          </MenuList>\r\n        </Menu>\r\n      </Paper>    \r\n          \r\n      {error && <Alert severity=\"error\">{error}</Alert>}\r\n      <Paper sx={{ width: 320, maxWidth: \"100%\" }}>\r\n        <Menu\r\n          sx={{ width: 320, maxWidth: \"100%\" }}\r\n          id=\"act-menu\"\r\n          anchorEl={accountAnchorEl}\r\n          open={openAccount}\r\n          onClose={handleAccountClose}\r\n          MenuListProps={{\r\n            \"aria-labelledby\": \"basic-button\",\r\n          }}\r\n        >\r\n          <MenuList>\r\n            \r\n            <MenuItem>\r\n              <Button\r\n                sx={{\r\n                  background:\r\n                    \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",\r\n                  border: 0,\r\n                  borderRadius: 3,\r\n                  boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\",\r\n                  color: \"white\",\r\n                  height: 30,\r\n                  padding: \"0 30px\",\r\n                }}\r\n                variant=\"contained\"\r\n                fullWidth\r\n                onClick={handleLogout}\r\n              >\r\n                Logout\r\n              </Button>\r\n            </MenuItem>\r\n          </MenuList>\r\n        </Menu>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Outlet, Navigate } from \"react-router-dom\";\r\nimport { Container, Snackbar } from \"@mui/material\";\r\nimport TopBar from \"../components/TopBar\";\r\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\r\nimport {\r\n  headerTextState,\r\n  userDetailsState,\r\n  userState,\r\n} from \"../store/atoms/appState\";\r\n\r\nexport default function AppLayout() {\r\n  const user = useRecoilValue(userState);\r\n  const setHeaderText = useSetRecoilState(headerTextState);\r\n  const [errorMsg, setErrorMsg] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n\r\n  const handleClose = () => {\r\n    setError(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setHeaderText(\"Punjab Jewellers\");\r\n\r\n\r\n    if (user) {\r\n      <Navigate to=\"/login\" />;\r\n    } else {\r\n      console.log(\"error in app layout.jsx\")      \r\n    }\r\n  }, [\r\n    user,\r\n  ]);\r\n  return (\r\n    <>\r\n      <Container>\r\n        <TopBar></TopBar>\r\n        <Snackbar\r\n          anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n          open={error}\r\n          onClose={handleClose}\r\n          message={errorMsg}\r\n        />\r\n\r\n        <Outlet />\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Alert,\r\n  Card,\r\n  Box,\r\n  LinearProgress,\r\n  Grid,\r\n  Typography,\r\n  CardContent,\r\n  CardActionArea,\r\n  InputBase,\r\n  IconButton,\r\n  TextField,\r\n} from \"@mui/material\";\r\n\r\nimport { styled, alpha } from \"@mui/material/styles\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport AddCircleOutlineIcon from \"@mui/icons-material/AddCircleOutline\";\r\nimport { useRecoilState,  useSetRecoilState } from \"recoil\";\r\nimport {\r\n  headerTextState,\r\n  customerSearchState,\r\n  customerState,\r\n  selectedCustomerState\r\n} from \"../store/atoms/appState\";\r\nimport {\r\n  collection,\r\n  onSnapshot,\r\n  query,\r\n  where,\r\n} from \"firebase/firestore\";\r\nimport { appdb } from \"../utils/firebase-config\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Search = styled(\"div\")(({ theme }) => ({\r\n  position: \"relative\",\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n  \"&:hover\": {\r\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n  },\r\n  marginLeft: 0,\r\n  marginTop: 2,\r\n  width: \"100%\",\r\n  [theme.breakpoints.up(\"sm\")]: {\r\n    marginLeft: theme.spacing(1),\r\n    width: \"auto\",\r\n  },\r\n}));\r\n\r\nconst SearchIconWrapper = styled(\"div\")(({ theme }) => ({\r\n  padding: theme.spacing(0, 2),\r\n  height: \"100%\",\r\n  position: \"absolute\",\r\n  pointerEvents: \"none\",\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n}));\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n  color: \"inherit\",\r\n  \"& .MuiInputBase-input\": {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"18ch\",\r\n      \"&:focus\": {\r\n        width: \"20ch\",\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Customers() {\r\n  // const user = useRecoilValue(userDetailsState);\r\n  // const months = useRecoilValue(monthState);\r\n  const setHeaderText = useSetRecoilState(headerTextState);\r\n  const setCustomer = useSetRecoilState(customerState);\r\n  const setSelectedCustomer = useSetRecoilState(selectedCustomerState);\r\n  const [customers, setDispCustomer ] = useRecoilState(customerSearchState);\r\n  const [error, setError] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  //const [expanded, setExpanded] = useState(false);\r\n const navigate = useNavigate();\r\n\r\n   //////////////////EDIT Customer/////////////\r\n\r\n   const handleEditCustomer = (e) => {\r\n      const customerId = e.currentTarget.dataset.custid\r\n      setCustomer(customerId);\r\n       const selectedCustomer = customers.filter(customer => customer.id === customerId)[0];\r\n      setSelectedCustomer(selectedCustomer);\r\n      console.log(selectedCustomer);\r\n      navigate(\"/editcustomer\");\r\n  };\r\n\r\n  const handleCustomerSearch = async (e) => {\r\n    if ((e.target.value.toLowerCase()).length >= 10)\r\n    {\r\n    setIsLoading(true);\r\n        const collectionRef = query(\r\n          collection(appdb, \"customerDraw\"),\r\n          where(\"customerPhone\", \"==\", e.target.value.toLowerCase())\r\n        );\r\n        await onSnapshot(collectionRef,(snapshot) => {\r\n          setDispCustomer(\r\n              snapshot.docs.map((doc) => ({\r\n                id: doc.id,\r\n                ...doc.data(),\r\n              }))\r\n            )        \r\n        },\r\n          (error) => {\r\n            setError(error);\r\n          }\r\n        );\r\n        setIsLoading(false);\r\n    }\r\n  };\r\n const [phoneNoState] = useState();\r\n   useEffect(() => {\r\n    setHeaderText(\"Customer\");\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        sx={{\r\n          display: \"flex\",\r\n          direction: \"row\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Grid\r\n          item\r\n          xs={6}\r\n          sm={6}\r\n          md={6}\r\n          sx={{ justifyContent: \"flex-start\", alignItems: \"center\" }}\r\n        >\r\n          <Search>\r\n            <SearchIconWrapper>\r\n              <SearchIcon />\r\n            </SearchIconWrapper>\r\n            <StyledInputBase\r\n              placeholder=\"Enter Phone No..\"\r\n              inputProps={{ \"aria-label\": \"search\" }}\r\n              onChange={\r\n               handleCustomerSearch\r\n              }\r\n            />\r\n          </Search>\r\n          \r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={6}\r\n          sm={6}\r\n          md={6}\r\n          sx={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n          }}\r\n        >\r\n          {/* <IconButton disabled={isLoading} \r\n          //onClick={handleAddProduct}\r\n          >\r\n            <AddCircleOutlineIcon color=\"secondary\" />\r\n          </IconButton> */}\r\n        </Grid>\r\n      </Grid>\r\n      {error && <Alert severity=\"error\">{error}</Alert>}\r\n      {isLoading && (\r\n        <Box sx={{ width: \"100%\" }}>\r\n          <LinearProgress />\r\n        </Box>\r\n      )}\r\n\r\n{customers &&\r\n        customers.map((customer) => (\r\n          <Card\r\n            key={customer.id}\r\n            sx={{\r\n              mt: 0.5,\r\n              \"&:before\": {\r\n                display: \"none\",\r\n              },\r\n              borderBottom: \"1px solid #dddddd\",\r\n              borderRadius: \"20px\",\r\n              boxShadow: \"none\"\r\n              //,...(product.prodstatus === \"Dormant\" && {background: \"#eecaca\",}\r\n            }}\r\n          >\r\n            <CardActionArea\r\n            data-custid={customer.id}\r\n            onClick={handleEditCustomer}>\r\n<CardContent>\r\n                <Grid\r\n                  container\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    direction: \"row\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <Grid\r\n                    item\r\n                    xs={6}\r\n                    sm={6}\r\n                    md={12}\r\n                    lg={12}\r\n                    sx={{ justifyContent: \"flex-start\" }}\r\n                  >\r\n\r\n<Box\r\n      component=\"form\"\r\n      sx={{\r\n        '& .MuiTextField-root': { m: 1, width: '20ch' },\r\n      }}\r\n      noValidate\r\n      autoComplete=\"off\"\r\n    >        \r\n      <>\r\n      <TextField\r\n          id=\"standard-read-only-input\"\r\n          label=\"Customer Draw ID\"\r\n          defaultValue={customer.id}\r\n          InputProps={{\r\n            readOnly: true,\r\n          }}\r\n          variant=\"standard\"\r\n        />\r\n        \r\n<TextField\r\n          id=\"standard-read-only-input\"\r\n          label=\"Customer ID\"\r\n          defaultValue={customer.customerId}\r\n          InputProps={{\r\n            readOnly: true,\r\n          }}\r\n          variant=\"standard\"\r\n        />\r\n\r\n<TextField\r\n          id=\"standard-read-only-input\"\r\n          label=\"Phone No.\"\r\n          defaultValue={customer.customerPhone}\r\n          InputProps={{\r\n            readOnly: true,\r\n          }}\r\n          variant=\"standard\"\r\n        />\r\n\r\n<TextField\r\n          id=\"standard-read-only-input\"\r\n          label=\"Customer Name\"\r\n          defaultValue={customer.customerName}\r\n          InputProps={{\r\n            readOnly: true,\r\n          }}\r\n          variant=\"standard\"\r\n        />\r\n\r\n       \r\n</>\r\n    </Box>\r\n\r\n\r\n                  </Grid>\r\n                  </Grid>\r\n\r\n                  </CardContent>\r\n            </CardActionArea>\r\n          </Card>\r\n        )\r\n        )}\r\n\r\n             \r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useSetRecoilState, useRecoilValue, useRecoilState } from \"recoil\";\r\nimport { headerTextState, userDetailsState, drawState } from \"../store/atoms/appState\";\r\nimport { Button, Card, Grid, CardHeader, CardContent, Box } from \"@mui/material\";\r\nimport { appdb } from \"../utils/firebase-config\";\r\nimport {\r\n  collection,\r\n  getDocs,\r\n  onSnapshot\r\n} from \"firebase/firestore\";\r\n\r\nexport default function Home() {\r\n \r\n  const setHeaderText = useSetRecoilState(headerTextState);\r\n  // const setCustomerCount = useRecoilValue(customerCountState);\r\n  const [setCustomerCount, customerCountState] = useState();\r\n  const [setDrawCount, drawCountState] = useState();\r\n  const [draw, setDraw] = useRecoilState(drawState);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  let navigate = useNavigate();\r\n\r\n\r\n  //console.log(\"User State: \"+ user);\r\n  useEffect(() => {\r\n    setHeaderText(\"Punjab Jewellers\");\r\n\r\n\r\n    const fetchCustomerCount = async () => {\r\n      setIsLoading(true);\r\n      const docRef = collection(appdb, \"customer\");\r\n      try {\r\n        const data = await getDocs(docRef);\r\n        const count = data.docs.length\r\n        customerCountState(count)\r\n        setIsLoading(false);\r\n        } catch (e) {     \r\n        return 'error'\r\n      }\r\n    }\r\n    const fetchDraw = async () => {\r\n      setIsLoading(true);\r\n        const collectionRef = collection(appdb, \"draw\");\r\n        console.log(\"+++++++++++++\");\r\n        const data = await onSnapshot(collectionRef,(snapshot) => {\r\n          setDraw(\r\n            snapshot.docs.map((doc) => ({\r\n              id: doc.id,\r\n              ...doc.data(),\r\n            }))\r\n          )\r\n          drawCountState( snapshot.docs.length)\r\n        },\r\n          (error) => {\r\n            console.log(\"+-+-+-+-+-+-+-++-+-+-+-+\");\r\n            console.log(error.message);\r\n          }\r\n        );\r\n        setIsLoading(false);\r\n        console.log(draw);\r\n        return data;        \r\n    };\r\n    \r\n    fetchCustomerCount();\r\n    fetchDraw();\r\n\r\n  },[\r\n    \r\n  ]);\r\n\r\n  const customerRoute = () =>{ \r\n    let path = `/managecustomer`; \r\n    navigate(path);\r\n  }\r\n\r\n  const customerPaymentRoute = () =>{ \r\n    let path = `/customer`; \r\n    navigate(path);\r\n  }\r\n\r\n  const drawRoute = () =>{ \r\n    let path = `/draw`; \r\n    navigate(path);\r\n  }\r\n    \r\n  return (\r\n    <>\r\n      <Grid container spacing={2}>\r\n      <Grid item xs={12} md={6} lg={4}>\r\n          <Card sx={{ height: \"300px\" }}>\r\n          <CardContent>\r\n          <CardHeader title=\"Customer\"></CardHeader>            \r\n          <CardContent>\r\n          <Box sx={{ width: \"100%\" }}>\r\n                <Button onClick={customerPaymentRoute} variant = 'outlined'>Customer Payment</Button>\r\n                </ Box>\r\n                <Box sx={{ width: \"100%\", mt: \"5%\"}}>\r\n                <Button onClick={customerRoute} variant = 'outlined'>Customer</Button>\r\n                </ Box>\r\n          </CardContent>\r\n              <CardContent>Total Active Customers\r\n                    <h1>\r\n                      {setCustomerCount}  \r\n                    </h1>\r\n                </CardContent>\r\n              </CardContent>\r\n          </Card>\r\n        </Grid> \r\n        <Grid item xs={12} md={6} lg={4}>\r\n          <Card sx={{ height: \"300px\" }}>\r\n          <CardContent>\r\n          <CardHeader title=\"Draws\"></CardHeader>            \r\n          <CardContent>\r\n          <Button onClick={drawRoute} variant = 'outlined'>Manage Draw</Button>\r\n          </CardContent>\r\n              <CardContent>Total Active Draws: \r\n                  <h1>\r\n                    {setDrawCount}  \r\n                  </h1>\r\n              </CardContent>\r\n              </CardContent>\r\n          </Card>\r\n        </Grid> \r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\r\nimport { userDetailsState, headerTextState } from \"../store/atoms/appState\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as Yup from \"yup\";\r\n\r\n//import { useAuth } from \"../contexts/AuthContext\";\r\n\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Divider,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogActions,\r\n  DialogContent,\r\n  LinearProgress,\r\n  Grid,\r\n  TextField,\r\n  Alert,\r\n  Typography,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  FormLabel,\r\n  CardActionArea,\r\n} from \"@mui/material\";\r\n\r\nimport { appdb } from \"../utils/firebase-config\";\r\nimport {\r\n  doc,\r\n  getDoc,\r\n  query,\r\n  collection,\r\n  where,\r\n  updateDoc,\r\n  onSnapshot,\r\n  serverTimestamp,\r\n  getDocs,\r\n  setDoc,\r\n  deleteDoc,\r\n} from \"firebase/firestore\";\r\n\r\nexport default function Users() {\r\n  //Global Page Elements\r\n  //const { signup, removeUser } = useAuth();\r\n  const user = useRecoilValue(userDetailsState);\r\n  const setHeaderText = useSetRecoilState(headerTextState);\r\n  const [error, setError] = useState();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const [subscription, setSubscription] = useState({\r\n    subsemail: \"\",\r\n    subslicensecount: \"\",\r\n    subsname: \"\",\r\n  });\r\n  const [licenseCount, setLicenseCount] = useState(0);\r\n  const [userCount, setUserCount] = useState(0);\r\n  const [remainingUserCount, setRemainingUserCount] = useState(0);\r\n  const [usersAccounts, setUsersAccounts] = useState([]);\r\n\r\n  const [rolesLov, setRolesLov] = useState({});\r\n  const [openNewUser, setOpenNewUser] = useState(false);\r\n  const [newUserError, setNewUserError] = useState();\r\n  const [editUser, setEditUser] = useState({\r\n    usrid: \"\",\r\n    usrfname: \"\",\r\n    usrlname: \"\",\r\n    usrrole: \"\",\r\n    usremail: \"\",\r\n  });\r\n  const [openEditUser, setOpenEditUser] = useState(false);\r\n\r\n  //ADD USER ACCOUNTS////////////////////////////////////////////////\r\n  const handleAddUser = () => {\r\n    if (remainingUserCount > 0) {\r\n      setOpenNewUser(true);\r\n    } else {\r\n      setError(\"You do not have enough license to create new user\");\r\n    }\r\n  };\r\n\r\n  //////////////////CREATE NEW USER/////////////////\r\n\r\n  const userValidationSchema = Yup.object().shape({\r\n    usremail: Yup.string()\r\n      .required(\"Email is required\")\r\n      .email(\"Email is invalid\"),\r\n    usrfname: Yup.string().required(\"User First Name is required\"),\r\n    usrlname: Yup.string().required(\"User Last Name is required\"),\r\n    usrrole: Yup.string().required(\"User Role is required\"),\r\n  });\r\n\r\n  const {\r\n    register,\r\n    control,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors },\r\n  } = useForm({ resolver: yupResolver(userValidationSchema) });\r\n\r\n  const handleCreateUser = async (data) => {\r\n    const new_user = {\r\n      subsid: user.subsid,\r\n      subsname: user.subsname,\r\n      usremail: data.usremail,\r\n      usrfname: data.usrfname,\r\n      usrlname: data.usrlname,\r\n      usrrole: data.usrrole,\r\n      createdby: user.usremail,\r\n      createdon: serverTimestamp(),\r\n      modifiedby: \"\",\r\n      modifiedon: \"\",\r\n    };\r\n    try {\r\n      setIsLoading(true);\r\n\r\n      //await signup(data.usremail, \"abc123\");\r\n\r\n      const collectionRef = collection(appdb, \"userrole\");\r\n      const q = query(collectionRef, where(\"usremail\", \"==\", data.usremail));\r\n\r\n      const docs = await getDocs(q);\r\n\r\n      if (docs.empty) {\r\n        try {\r\n          await setDoc(doc(appdb, \"userrole\", data.usremail), new_user);\r\n          setOpenNewUser(false);\r\n          reset({\r\n            usremail: \"\",\r\n            usrfname: \"\",\r\n            usrlname: \"\",\r\n            usrrole: \"\",\r\n          });\r\n        } catch (error) {\r\n          setNewUserError(error);\r\n        }\r\n      } else {\r\n        setNewUserError(\"User with same email already exists\");\r\n      }\r\n    } catch (error) {\r\n      setNewUserError(error);\r\n    }\r\n\r\n    setIsLoading(false);\r\n  };\r\n\r\n  //////////////////EDIT USER/////////////////\r\n  const handleEditUserInputChnage = (e) => {\r\n    const { name, value } = e.target;\r\n    setEditUser({\r\n      ...editUser,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleEditUser = (e) => {\r\n    setEditUser({});\r\n    const usr_edit = {\r\n      usrid: e.currentTarget.dataset.usrid,\r\n      usrfname: e.currentTarget.dataset.usrfname,\r\n      usrlname: e.currentTarget.dataset.usrlname,\r\n      usrrole: e.currentTarget.dataset.usrrole,\r\n      usremail: e.currentTarget.dataset.usremail,\r\n    };\r\n\r\n    if (e.currentTarget.dataset.usrrole !== \"SuperAdmin\") {\r\n      setEditUser(usr_edit);\r\n      setOpenEditUser(true);\r\n    } else {\r\n      setError(\"Cannot Edit SuperAdmin\");\r\n    }\r\n  };\r\n\r\n  const handleUpdateUser = async (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      await updateDoc(doc(appdb, \"userrole\", editUser.usrid), {\r\n        usrfname: editUser.usrfname,\r\n        usrlname: editUser.usrlname,\r\n        usrrole: editUser.usrrole,\r\n        modifiedby: user.usremail,\r\n        modifiedon: serverTimestamp(),\r\n      });\r\n      setOpenEditUser(false);\r\n    } catch (error) {\r\n      setNewUserError(error);\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n  ////////////DELETE USER ////////////////\r\n  const handleDeleteUser = async (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n    try {\r\n      await deleteDoc(doc(appdb, \"userrole\", editUser.usrid));\r\n      setOpenEditUser(false);\r\n      //await removeUser(e.currentTarget.dataset.usrid);\r\n    } catch (error) {\r\n      setError(error);\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n  ////////////////\r\n  const handleClose = () => {\r\n    setOpenNewUser(false);\r\n    setNewUserError(\"\");\r\n    setOpenEditUser(false);\r\n    reset({\r\n      usremail: \"\",\r\n      usrfname: \"\",\r\n      usrlname: \"\",\r\n      usrrole: \"\",\r\n    });\r\n  };\r\n\r\n  /////////FETCH DATA on RENDER///////////////\r\n\r\n  //load subscription details of logged in user\r\n  useEffect(() => {\r\n    setHeaderText(`${user.subsname} Users`);\r\n    const fetchSubscription = async () => {\r\n      if (Object.keys(user).length === 0) {\r\n        <Navigate to=\"/login\" />;\r\n      } else {\r\n        setIsLoading(true);\r\n        setError(\"\");\r\n        try {\r\n          const q = doc(appdb, \"subscription\", user.subsid);\r\n          const subsRef = await getDoc(q);\r\n          setSubscription(subsRef.data());\r\n          setLicenseCount(subsRef.data().subslicensecount);\r\n        } catch (error) {\r\n          setError(error);\r\n        }\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    fetchSubscription();\r\n  }, [user.subsid, setHeaderText, user]);\r\n\r\n  //load all users belonging to the subscription\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      if (Object.keys(user).length === 0) {\r\n        <Navigate to=\"/login\" />;\r\n      } else {\r\n        setIsLoading(true);\r\n        setError(\"\");\r\n        const q = query(\r\n          collection(appdb, \"userrole\"),\r\n          where(\"subsid\", \"==\", user.subsid)\r\n        );\r\n        const unsubscribe = onSnapshot(\r\n          q,\r\n          (snapshot) => {\r\n            setUsersAccounts(\r\n              snapshot.docs.map((doc) => ({\r\n                id: doc.id,\r\n                ...doc.data(),\r\n              }))\r\n            );\r\n            setUserCount(usersAccounts.length);\r\n            setRemainingUserCount(licenseCount - userCount);\r\n          },\r\n          (error) => {\r\n            setError(error);\r\n          }\r\n        );\r\n\r\n        setIsLoading(false);\r\n        return unsubscribe;\r\n      }\r\n    };\r\n    fetchUsers();\r\n  }, [user, licenseCount, userCount, usersAccounts.length]);\r\n\r\n  //load list of values for available user roles\r\n  useEffect(() => {\r\n    const fetchUserLov = async () => {\r\n      const docRef = doc(appdb, \"listofvalues\", \"userrole\");\r\n      try {\r\n        const response = await getDoc(docRef);\r\n        setRolesLov(response.data());\r\n      } catch (error) {\r\n        setError(error);\r\n      }\r\n    };\r\n    fetchUserLov();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          mt: 1,\r\n          mb: 2,\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          flexWrap: \"wrap\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n          alignContent: \"space-between\",\r\n        }}\r\n      >\r\n        <Box>Subscription: {subscription.subsname}</Box>\r\n        <Box>License: {licenseCount}</Box>\r\n        <Box>User Count: {userCount}</Box>\r\n        <Box>Remaining: {remainingUserCount}</Box>\r\n      </Box>\r\n      <Divider />\r\n      {error && <Alert severity=\"error\">{error}</Alert>}\r\n      <Button onClick={handleAddUser}>Add User</Button>\r\n\r\n      {usersAccounts &&\r\n        usersAccounts.map((userAccount) => (\r\n          <Card\r\n            key={userAccount.id}\r\n            sx={{\r\n              mt: 0.5,\r\n              \"&:before\": {\r\n                display: \"none\",\r\n              },\r\n              borderBottom: \"1px solid #dddddd\",\r\n              borderRadius: \"20px\",\r\n              boxShadow: \"none\",\r\n            }}\r\n          >\r\n            <CardActionArea\r\n              data-usrid={userAccount.id}\r\n              data-usrfname={userAccount.usrfname}\r\n              data-usrlname={userAccount.usrlname}\r\n              data-usrrole={userAccount.usrrole}\r\n              data-usremail={userAccount.usremail}\r\n              onClick={handleEditUser}\r\n            >\r\n              <CardContent>\r\n                <Grid\r\n                  container\r\n                  rowSpacing={1}\r\n                  columnSpacing={{ xs: 1, sm: 2, md: 3 }}\r\n                  sx={{\r\n                    direction: \"row\",\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <Grid\r\n                    item\r\n                    xs={6}\r\n                    sm={6}\r\n                    md={6}\r\n                    sx={{ justifyContent: \"flex-start\" }}\r\n                  >\r\n                    <Typography sx={{ fontWeight: \"bold\" }}>\r\n                      {userAccount.usrfname} {userAccount.usrlname}\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid\r\n                    item\r\n                    xs={6}\r\n                    sm={6}\r\n                    md={6}\r\n                    sx={{\r\n                      display: \"flex\",\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"flex-end\",\r\n                    }}\r\n                  >\r\n                    <Typography variant=\"subtitle2\">\r\n                      {userAccount.usrrole}\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid\r\n                    item\r\n                    xs={6}\r\n                    sm={6}\r\n                    md={6}\r\n                    sx={{ justifyContent: \"flex-start\" }}\r\n                  >\r\n                    <FormLabel>\r\n                      <Typography>{userAccount.usremail}</Typography>\r\n                    </FormLabel>\r\n                  </Grid>\r\n                </Grid>\r\n              </CardContent>\r\n            </CardActionArea>\r\n          </Card>\r\n        ))}\r\n\r\n      <Dialog id=\"newuser\" open={openNewUser} onClose={handleClose}>\r\n        <DialogTitle className=\"background\">Add User</DialogTitle>\r\n        {newUserError && <Alert severity=\"error\">{newUserError}</Alert>}\r\n        <form onSubmit={handleSubmit(handleCreateUser)}>\r\n          {isLoading && (\r\n            <Box sx={{ width: \"100%\" }}>\r\n              <LinearProgress />\r\n            </Box>\r\n          )}\r\n\r\n          <DialogContent>\r\n            <Grid\r\n              container\r\n              rowSpacing={1}\r\n              columnSpacing={{ xs: 1, sm: 2, md: 3 }}\r\n            >\r\n              <Grid item xs={12} sm={12} md={6}>\r\n                <TextField\r\n                  required\r\n                  id=\"usremail\"\r\n                  name=\"usremail\"\r\n                  label=\"User Email\"\r\n                  fullWidth\r\n                  margin=\"dense\"\r\n                  size=\"small\"\r\n                  {...register(\"usremail\")}\r\n                  error={errors.usremail ? true : false}\r\n                />\r\n                <Typography variant=\"inherit\" color=\"textSecondary\">\r\n                  {errors.usremail?.message}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12} sm={12} md={6}>\r\n                <TextField\r\n                  required\r\n                  id=\"usrfname\"\r\n                  name=\"usrfname\"\r\n                  label=\"First Name\"\r\n                  fullWidth\r\n                  margin=\"dense\"\r\n                  size=\"small\"\r\n                  {...register(\"usrfname\")}\r\n                  error={errors.usrfname ? true : false}\r\n                />\r\n                <Typography variant=\"inherit\" color=\"textSecondary\">\r\n                  {errors.usrfname?.message}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12} sm={12} md={6}>\r\n                <TextField\r\n                  required\r\n                  id=\"usrlname\"\r\n                  name=\"usrlname\"\r\n                  label=\"Last Name\"\r\n                  fullWidth\r\n                  margin=\"dense\"\r\n                  size=\"small\"\r\n                  {...register(\"usrlname\")}\r\n                  error={errors.usrlname ? true : false}\r\n                />\r\n                <Typography variant=\"inherit\" color=\"textSecondary\">\r\n                  {errors.usrlname?.message}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12} sm={12} md={6}>\r\n                <FormControl fullWidth size=\"small\">\r\n                  <InputLabel>User Role</InputLabel>\r\n                  <Controller\r\n                    control={control}\r\n                    name=\"usrrole\"\r\n                    defaultValue=\"\"\r\n                    inputRef={register(\"usrrole\")}\r\n                    error={errors.usrrole ? true : false}\r\n                    render={({ field: { onChange, value } }) => (\r\n                      <Select\r\n                        label=\"Customer Type\"\r\n                        required\r\n                        value={value}\r\n                        onChange={onChange}\r\n                      >\r\n                        {rolesLov.roles?.map((val) => (\r\n                          <MenuItem key={val} value={val}>\r\n                            {val}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    )}\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button disabled={isLoading} type=\"submit\" color=\"info\">\r\n              Add\r\n            </Button>\r\n            <Button\r\n              disabled={isLoading}\r\n              onClick={handleClose}\r\n              color=\"secondary\"\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n\r\n      <Dialog id=\"edituser\" open={openEditUser} onClose={handleClose}>\r\n        <DialogTitle className=\"background\">Edit User</DialogTitle>\r\n        {newUserError && <Alert severity=\"error\">{newUserError}</Alert>}\r\n        <form onSubmit={handleUpdateUser}>\r\n          {isLoading && (\r\n            <Box sx={{ width: \"100%\" }}>\r\n              <LinearProgress />\r\n            </Box>\r\n          )}\r\n\r\n          <DialogContent>\r\n            <Grid\r\n              container\r\n              rowSpacing={1}\r\n              columnSpacing={{ xs: 1, sm: 2, md: 3 }}\r\n            >\r\n              <Grid item xs={12} sm={12} md={6}>\r\n                <TextField\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  disabled\r\n                  id=\"usremail\"\r\n                  label=\"User Email\"\r\n                  name=\"usremail\"\r\n                  value={editUser.usremail}\r\n                  onChange={handleEditUserInputChnage}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={12} md={6}>\r\n                <TextField\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  required\r\n                  id=\"usrfname\"\r\n                  name=\"usrfname\"\r\n                  label=\"First Name\"\r\n                  value={editUser.usrfname}\r\n                  onChange={handleEditUserInputChnage}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={12} md={6}>\r\n                <TextField\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  required\r\n                  id=\"usrlname\"\r\n                  name=\"usrlname\"\r\n                  label=\"Last Name\"\r\n                  value={editUser.usrlname}\r\n                  onChange={handleEditUserInputChnage}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={12} md={6}>\r\n                <FormControl fullWidth size=\"small\">\r\n                  <InputLabel>User Role</InputLabel>\r\n                  <Select\r\n                    margin=\"dense\"\r\n                    id=\"usrrole\"\r\n                    label=\"User Role\"\r\n                    name=\"usrrole\"\r\n                    value={editUser.usrrole}\r\n                    onChange={handleEditUserInputChnage}\r\n                  >\r\n                    {rolesLov.roles?.map((val) => (\r\n                      <MenuItem key={val} value={val}>\r\n                        {val}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button disabled={isLoading} type=\"submit\" color=\"info\">\r\n              Update\r\n            </Button>\r\n            <Button\r\n              disabled={isLoading}\r\n              onClick={handleDeleteUser}\r\n              color=\"error\"\r\n            >\r\n              Delete\r\n            </Button>\r\n            <Button\r\n              disabled={isLoading}\r\n              onClick={handleClose}\r\n              color=\"secondary\"\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport SelectUnstyled, { selectUnstyledClasses } from '@mui/base/SelectUnstyled';\r\nimport OptionUnstyled, { optionUnstyledClasses } from '@mui/base/OptionUnstyled';\r\nimport produce from 'immer';\r\nimport PopperUnstyled from '@mui/base/PopperUnstyled';\r\nimport { styled } from '@mui/system';\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport { \r\n  selectedCustomerState, userState\r\n} from \"../store/atoms/appState\";\r\nimport {\r\n  collection,\r\n  doc,\r\n  updateDoc\r\n} from \"firebase/firestore\";\r\nimport { appdb, auth } from \"../utils/firebase-config\";\r\n\r\nconst blue = {\r\n  100: '#DAECFF',\r\n  200: '#99CCF3',\r\n  400: '#3399FF',\r\n  500: '#007FFF',\r\n  600: '#0072E5',\r\n  900: '#003A75',\r\n};\r\n\r\nconst grey = {\r\n  100: '#E7EBF0',\r\n  200: '#E0E3E7',\r\n  300: '#CDD2D7',\r\n  400: '#B2BAC2',\r\n  500: '#A0AAB4',\r\n  600: '#6F7E8C',\r\n  700: '#3E5060',\r\n  800: '#2D3843',\r\n  900: '#1A2027',\r\n};\r\n\r\nconst StyledButton = styled('button')(\r\n  ({ theme }) => `\r\n  font-family: IBM Plex Sans, sans-serif;\r\n  font-size: 0.875rem;\r\n  box-sizing: border-box;\r\n  min-height: calc(1.5em + 22px);\r\n  min-width: 100px;\r\n  background: ${theme.palette.mode === 'dark' ? grey[900] : '#fff'};\r\n  border: 1px solid ${theme.palette.mode === 'dark' ? grey[800] : grey[300]};\r\n  border-radius: 0.45em;\r\n  \r\n  padding: 10px;\r\n  text-align: left;\r\n  line-height: 1.5;\r\n  color: ${theme.palette.mode === 'dark' ? grey[300] : grey[900]};\r\n\r\n  &:hover {\r\n    background: ${theme.palette.mode === 'dark' ? '' : grey[100]};\r\n    border-color: ${theme.palette.mode === 'dark' ? grey[700] : grey[400]};\r\n  }\r\n\r\n  &.${selectUnstyledClasses.focusVisible} {\r\n    outline: 3px solid ${theme.palette.mode === 'dark' ? blue[600] : blue[100]};\r\n  }\r\n\r\n  &.${selectUnstyledClasses.expanded} {\r\n    &::after {\r\n      content: '▴';\r\n    }\r\n  }\r\n\r\n  &::after {\r\n    content: '▾';\r\n    float: right;\r\n  }\r\n  `,\r\n);\r\n\r\nconst StyledListbox = styled('ul')(\r\n  ({ theme }) => `\r\n  font-family: IBM Plex Sans, sans-serif;\r\n  font-size: 0.875rem;\r\n  box-sizing: border-box;\r\n  padding: 5px;\r\n  margin: 10px 0;\r\n  min-width: 100px;\r\n  background: ${theme.palette.mode === 'dark' ? grey[900] : '#fff'};\r\n  border: 1px solid ${theme.palette.mode === 'dark' ? grey[800] : grey[300]};\r\n  border-radius: 0.45em;\r\n  color: ${theme.palette.mode === 'dark' ? grey[300] : grey[900]};\r\n  overflow: auto;\r\n  outline: 0px;\r\n  `,\r\n);\r\n\r\nconst StyledOption = styled(OptionUnstyled)(\r\n  ({ theme }) => `\r\n  list-style: none;\r\n  padding: 8px;\r\n  border-radius: 0.45em;\r\n  cursor: default;\r\n\r\n  &:last-of-type {\r\n    border-bottom: none;\r\n  }\r\n\r\n  &.${optionUnstyledClasses.selected} {\r\n    background-color: ${theme.palette.mode === 'dark' ? blue[900] : blue[100]};\r\n    color: ${theme.palette.mode === 'dark' ? blue[100] : blue[900]};\r\n  }\r\n\r\n  &.${optionUnstyledClasses.highlighted} {\r\n    background-color: ${theme.palette.mode === 'dark' ? grey[800] : grey[100]};\r\n    color: ${theme.palette.mode === 'dark' ? grey[300] : grey[900]};\r\n  }\r\n\r\n  &.${optionUnstyledClasses.highlighted}.${optionUnstyledClasses.selected} {\r\n    background-color: ${theme.palette.mode === 'dark' ? blue[900] : blue[100]};\r\n    color: ${theme.palette.mode === 'dark' ? blue[100] : blue[900]};\r\n  }\r\n\r\n  &.${optionUnstyledClasses.disabled} {\r\n    color: ${theme.palette.mode === 'dark' ? grey[700] : grey[400]};\r\n  }\r\n\r\n  &:hover:not(.${optionUnstyledClasses.disabled}) {\r\n    background-color: ${theme.palette.mode === 'dark' ? grey[800] : grey[100]};\r\n    color: ${theme.palette.mode === 'dark' ? grey[300] : grey[900]};\r\n  }\r\n  `,\r\n);\r\n\r\nconst StyledPopper = styled(PopperUnstyled)`\r\n  z-index: 1;\r\n`;\r\n\r\nconst CustomSelect = React.forwardRef(function CustomSelect(props, ref) {\r\n  const components = {\r\n    Root: StyledButton,\r\n    Listbox: StyledListbox,\r\n    Popper: StyledPopper,\r\n    ...props.components,\r\n  };\r\n\r\n  return <SelectUnstyled {...props} ref={ref} components={components} />;\r\n});\r\n\r\nconst paymentMethod = [{key:1, value:'Card'}, {key:2, value:'Cash'}, {key:3, value:'Zylle'}]\r\n\r\nconst updateRecord = async (customer) => {\r\n  console.log(customer.id)\r\n  const collectionRef = collection(appdb, \"customerDraw\");\r\n    try {\r\n      await updateDoc(doc(collectionRef, customer.id), customer);\r\n      return 1;\r\n    } catch (error) {\r\n      console.log(\"Error writting to DB\"+error.message);\r\n    }\r\n}\r\n\r\nexport default function PaymentMethod(props) { \r\n  const [customer, setCustomer] = useRecoilState(selectedCustomerState);\r\n  const [user] = useRecoilValue(userState);\r\n\r\n  console.log(user);\r\n\r\n  const optionChange = (e) => {  updateRecord(\r\n      produce(customer, draft => {\r\n        draft.payment[props.RowID-1].paymentMethod= e;\r\n        draft.payment[props.RowID-1].updatedBy=  auth.currentUser.email;\r\n    })\r\n  );\r\n\r\n    return setCustomer(\r\n      produce(customer, draft => {\r\n        draft.payment[props.RowID-1].paymentMethod= e;\r\n        draft.payment[props.RowID-1].updatedBy= auth.currentUser.email;\r\n    })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n    {\r\n    (props.method) ?\r\n    <CustomSelect key={props.method} value={props.method} disabled>  \r\n              <StyledOption key={props.method} value={ props.method}>{ props.method}</StyledOption>\r\n  </CustomSelect>\r\n  :  <CustomSelect onChange={optionChange}>       \r\n       {paymentMethod.map((method) => (\r\n              <StyledOption key={props.method} value={method.value}>{method.value}</StyledOption>\r\n              )\r\n          )\r\n        }\r\n  </CustomSelect>    \r\n      }\r\n\r\n      </>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport { appdb, auth } from \"../utils/firebase-config\";\r\nimport { \r\n  selectedCustomerState, userState\r\n} from \"../store/atoms/appState\";\r\n\r\nimport {\r\n  collection,\r\n  doc,\r\n  updateDoc\r\n} from \"firebase/firestore\";\r\nimport produce from 'immer';\r\n// const useStyles = makeStyles({\r\n//   root: {\r\n//     \"& .MuiInputBase-root\": {\r\n//       padding: 0,\r\n//       'min-height': 'calc(1.5em + 22px)',\r\n//       \"& .MuiButtonBase-root\": {\r\n//         padding: 0,\r\n//         paddingTop:1,\r\n//         paddingBottom:1,\r\n//         paddingLeft: 15\r\n//       },\r\n//       \"& .MuiInputBase-input\": {\r\n//         padding: 15,\r\n//         paddingTop:1,\r\n//         paddingBottom:1,\r\n//         paddingLeft: 15\r\n//       }\r\n//     }\r\n//   }\r\n// });\r\n\r\n\r\nexport default function PaymentDate(props) {\r\n  const [value, setValue] = React.useState(null);\r\n  const [customer, setCustomer] = useRecoilState(selectedCustomerState);\r\n  const [user] = useRecoilValue(userState);\r\n  //const classes = useStyles();\r\n  const optionChange = (newValue) => { \r\n\r\n    let formattedDate = `${\r\n      newValue.getMonth() + 1\r\n    }-${newValue.getDate()}-${newValue.getFullYear()}`;\r\n\r\n    const updateRecord = async (customer) => {\r\n      const collectionRef = collection(appdb, \"customerDraw\");\r\n        try {\r\n          await updateDoc(doc(collectionRef, customer.id), customer);\r\n          return 1;\r\n        } catch (error) {\r\n        }\r\n    }\r\n\r\n    \r\nupdateRecord(\r\n      produce(customer, draft => {\r\n        draft.payment[props.RowID-1].paymentDate= formattedDate;\r\n        draft.payment[props.RowID-1].updatedBy= auth.currentUser.email;\r\n      })\r\n    );\r\n\r\n    return setCustomer(\r\n      produce(customer, draft => {\r\n        draft.payment[props.RowID-1].paymentDate= formattedDate;\r\n        draft.payment[props.RowID-1].updatedBy=  auth.currentUser.email;\r\n      })\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n    {\r\n      (props.date) ?\r\n      <LocalizationProvider dateAdapter={DateFnsUtils}>\r\n      <DatePicker\r\n      readOnly\r\n        value={props.date}\r\n        onChange={newValue => {\r\n          setValue(newValue);\r\n        }}\r\n        renderInput={props => {\r\n          return <TextField {...props} />;\r\n        }}\r\n      />\r\n    </LocalizationProvider>\r\n    :\r\n      <LocalizationProvider dateAdapter={DateFnsUtils}>\r\n      <DatePicker\r\n      format=\"MM-dd-y\"\r\n        value={value}\r\n        onChange={newValue => {\r\n          setValue(newValue);\r\n          optionChange(newValue)\r\n        }}\r\n        renderInput={props => {\r\n          return <TextField {...props} />;\r\n        }}\r\n      />\r\n    </LocalizationProvider>\r\n    \r\n}\r\n    \r\n\r\n    </>\r\n    \r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  TableContainer,\r\n  TableCell,\r\n  TableBody,\r\n  TableHead,\r\n  TableRow,\r\n  Table,\r\n  Paper,\r\n  Alert,\r\n  Card,\r\n  Box,\r\n  LinearProgress,\r\n  Grid,\r\n  TextField,\r\n  CardContent,\r\n  //InputBase,\r\n  Button\r\n} from \"@mui/material\";\r\n\r\n//import { styled, alpha } from \"@mui/material/styles\";\r\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\r\nimport {\r\n  //userDetailsState,\r\n  headerTextState,\r\n  monthState,\r\n  selectedCustomerState\r\n} from \"../store/atoms/appState\";\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport PaymentMethod from \"../components/PaymentType\";\r\nimport PaymentDate from \"../components/PaymentDate\";\r\n\r\n// const Search = styled(\"div\")(({ theme }) => ({\r\n//   position: \"relative\",\r\n//   borderRadius: theme.shape.borderRadius,\r\n//   backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n//   \"&:hover\": {\r\n//     backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n//   },\r\n//   marginLeft: 0,\r\n//   marginTop: 2,\r\n//   width: \"100%\",\r\n//   [theme.breakpoints.up(\"sm\")]: {\r\n//     marginLeft: theme.spacing(1),\r\n//     width: \"auto\",\r\n//   },\r\n// }));\r\n\r\n// const SearchIconWrapper = styled(\"div\")(({ theme }) => ({\r\n//   padding: theme.spacing(0, 2),\r\n//   height: \"100%\",\r\n//   position: \"absolute\",\r\n//   pointerEvents: \"none\",\r\n//   display: \"flex\",\r\n//   alignItems: \"center\",\r\n//   justifyContent: \"center\",\r\n// }));\r\n\r\n// const StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n//   color: \"inherit\",\r\n//   \"& .MuiInputBase-input\": {\r\n//     padding: theme.spacing(1, 1, 1, 0),\r\n//     // vertical padding + font size from searchIcon\r\n//     paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n//     transition: theme.transitions.create(\"width\"),\r\n//     width: \"100%\",\r\n//     [theme.breakpoints.up(\"sm\")]: {\r\n//       width: \"18ch\",\r\n//       \"&:focus\": {\r\n//         width: \"20ch\",\r\n//       },\r\n//     },\r\n//   },\r\n// }));\r\n\r\nexport default function EditCustomers() {\r\n  const navigate = useNavigate();\r\n  //const user = useRecoilValue(userDetailsState);\r\n  const months = useRecoilValue(monthState);\r\n  const customer = useRecoilValue(selectedCustomerState);\r\n  const setHeaderText = useSetRecoilState(headerTextState);\r\n  const [error, setError] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const customerExists = Object.keys(customer).length === 0;\r\n\r\n \r\n\r\n  const checkCustomer = () => {\r\n    if (customerExists) {\r\n      console.log('switching........');\r\n      navigate(\"/customer\");\r\n    }else{\r\n      console.log('not switching........'); \r\n    }\r\n  };\r\n  checkCustomer();\r\n  \r\n  useEffect(() => {   \r\n    setHeaderText(\"Customer Draw\"); \r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        sx={{\r\n          display: \"flex\",\r\n          direction: \"row\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Grid\r\n          item\r\n          xs={6}\r\n          sm={6}\r\n          md={6}\r\n          sx={{ justifyContent: \"flex-start\", alignItems: \"center\" }}\r\n        >\r\n          \r\n        </Grid>\r\n        \r\n      </Grid>\r\n      {error && <Alert severity=\"error\">{error}</Alert>}\r\n      {isLoading && (\r\n        <Box sx={{ width: \"100%\" }}>\r\n          <LinearProgress />\r\n        </Box>\r\n      )}\r\n<Card\r\n            key={customer.id}\r\n            sx={{\r\n              mt: 0.5,\r\n              \"&:before\": {\r\n                display: \"none\",\r\n              },\r\n              borderBottom: \"1px solid #dddddd\",\r\n              borderRadius: \"20px\",\r\n              boxShadow: \"none\"\r\n            }}\r\n          >\r\n            {/* <CardActionArea\r\n            data-custid={customer.id}> */}\r\n<CardContent>\r\n  <Grid sx={{\r\n    mt: 1.0,\r\n    ml: 1.0,\r\n    \"&:before\": {\r\n      display: \"none\",\r\n    },\r\n  }\r\n}>\r\n   <Box\r\n      component=\"form\"\r\n      sx={{\r\n        '& .MuiTextField-root': { m: 1, width: '25ch' },\r\n      }}\r\n      noValidate\r\n      autoComplete=\"off\"\r\n    >        \r\n      <>\r\n   <TextField\r\n          id=\"standard-read-only-input\"\r\n          label=\"Customer Phone\"\r\n          defaultValue={customer.customerPhone}\r\n          InputProps={{\r\n            readOnly: true,\r\n          }}\r\n          variant=\"standard\"\r\n        />\r\n\r\n<TextField\r\n          id=\"standard-read-only-input\"\r\n          label=\"Customer Id\"\r\n          defaultValue={customer.customerId}\r\n          InputProps={{\r\n            readOnly: true,\r\n          }}\r\n          variant=\"standard\"\r\n        />\r\n\r\n<TextField\r\n          id=\"standard-read-only-input\"\r\n          label=\"Draw Id\"\r\n          defaultValue={customer.id}\r\n          InputProps={{\r\n            readOnly: true,\r\n          }}\r\n          variant=\"standard\"\r\n        />\r\n\r\n<Button onClick={() => navigate(-1)}>Previous Page</ Button>\r\n </>\r\n    </Box>\r\n   \r\n</Grid>\r\n\r\n<TableContainer component={Paper}\r\nsx={{\r\n    mt: 2.0,\r\n    \"&:before\": {\r\n      display: \"none\",\r\n    },\r\n  }\r\n}\r\n>\r\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\" size=\"small\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Draw Month</TableCell>\r\n            <TableCell>Payment Type</TableCell>\r\n            <TableCell>Payment Date</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {months.map((month, i) => (                     \r\n            <TableRow key={month}\r\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n            >\r\n              <TableCell component=\"th\" scope=\"row\">{\r\n              month              \r\n              }\r\n               \r\n              </TableCell>\r\n              {/* {console.log('++++++++++++' + !customerExists && customer.payment[i])} */}\r\n              <TableCell>\r\n                <PaymentMethod method={!customerExists && customer.payment[i].paymentMethod} RowID={!customerExists && customer.payment[i].id}/>\r\n              </TableCell>\r\n              <TableCell>\r\n                <PaymentDate date={!customerExists && customer.payment[i].paymentDate} RowID={!customerExists && customer.payment[i].id}/>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n\r\n</CardContent>\r\n            {/* </CardActionArea> */}\r\n          </Card>\r\n      \r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Alert,\r\n  Card,\r\n  Box,\r\n  LinearProgress,\r\n  Grid,\r\n  //Typography,\r\n  CardContent,\r\n  CardActionArea,\r\n  InputBase,\r\n  IconButton,\r\n  //Button,\r\n  TextField\r\n} from \"@mui/material\";\r\nimport produce from 'immer';\r\n\r\nimport { styled, alpha } from \"@mui/material/styles\";\r\n//import SearchIcon from \"@mui/icons-material/Search\";\r\nimport AddCircleOutlineIcon from \"@mui/icons-material/AddCircleOutline\";\r\nimport { useRecoilState,  useSetRecoilState } from \"recoil\";\r\nimport {\r\n  headerTextState,\r\n  customerSearchState,\r\n  customerState,\r\n  selectedCustomerState,\r\n  drawState,\r\n  manageDrawState\r\n} from \"../store/atoms/appState\";\r\nimport {\r\n  collection,\r\n  onSnapshot,\r\n  setDoc,\r\n  doc,\r\n  query,\r\n  //where,\r\n  //orderBy\r\n} from \"firebase/firestore\";\r\nimport { appdb } from \"../utils/firebase-config\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Search = styled(\"div\")(({ theme }) => ({\r\n  position: \"relative\",\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n  \"&:hover\": {\r\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n  },\r\n  marginLeft: 0,\r\n  marginTop: 2,\r\n  width: \"100%\",\r\n  [theme.breakpoints.up(\"sm\")]: {\r\n    marginLeft: theme.spacing(1),\r\n    width: \"auto\",\r\n  },\r\n}));\r\n\r\nconst SearchIconWrapper = styled(\"div\")(({ theme }) => ({\r\n  padding: theme.spacing(0, 2),\r\n  height: \"100%\",\r\n  position: \"absolute\",\r\n  pointerEvents: \"none\",\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n}));\r\n\r\n// const StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n//   color: \"inherit\",\r\n//   \"& .MuiInputBase-input\": {\r\n//     padding: theme.spacing(1, 1, 1, 0),\r\n//     // vertical padding + font size from searchIcon\r\n//     paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n//     transition: theme.transitions.create(\"width\"),\r\n//     width: \"100%\",\r\n//     [theme.breakpoints.up(\"sm\")]: {\r\n//       width: \"18ch\",\r\n//       \"&:focus\": {\r\n//         width: \"20ch\",\r\n//       },\r\n//     },\r\n//   },\r\n// }));\r\n\r\nexport default function Customers() {\r\n  const setHeaderText = useSetRecoilState(headerTextState);\r\n  const setCustomer = useSetRecoilState(customerState);\r\n  const setSelectedCustomer = useSetRecoilState(selectedCustomerState);\r\n  const [selectedDrawData, setDraw] = useRecoilState(drawState);\r\n  //const [customers, setDispCustomer ] = useRecoilState(customerSearchState);\r\n  const setManageDraw = useSetRecoilState(manageDrawState);\r\n  const [error, setError] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  //const [expanded, setExpanded] = useState(false);\r\n const navigate = useNavigate();\r\n\r\n\r\n   //////////////////EDIT Customer/////////////\r\n\r\n   \r\n   const handleDrawClick = (e) => {\r\n      const drawId = e.currentTarget.dataset.drawid\r\n      const selectedDraw = selectedDrawData.filter(d => d.id === drawId)[0];\r\n      setManageDraw(selectedDraw);\r\n      navigate(\"/managedraw\");\r\n  };\r\n\r\n  const formatDate = () => {\r\n    var d = new Date(),\r\n        month = '' + (d.getMonth() + 1),\r\n        day = '' + d.getDate(),\r\n        year = d.getFullYear();\r\n\r\n    if (month.length < 2) \r\n        month = '0' + month;\r\n    if (day.length < 2) \r\n        day = '0' + day;\r\n\r\n    return [month, day, year].join('-');\r\n}\r\n\r\n  const handleAddDraw = async () => {\r\n    //setIsLoading(true);\r\n    const collectionRef = collection(appdb, \"draw\");\r\n    const date = formatDate();\r\n    // let maxId = 1;\r\n    // if (selectedDrawData.length > 0){\r\n    //   maxId = Math.max.apply(Math, selectedDrawData.customer.map(function(o) { return o.drawId; })) + 1\r\n    // }\r\n  //   let maxId = 0;\r\n  // try{\r\n  //   const test = selectedDrawData.length > 0\r\n  //   maxId = Math.max.apply(Math, selectedDrawData.customer.map(function(o) { return o.drawId; })) + 1 \r\n  // }catch{\r\n  //      maxId = 1\r\n  // }\r\n\r\n  let maxId = 0;\r\n  const test = selectedDrawData.length > 0\r\n  console.log(test);\r\n  if(test === undefined || !test){\r\n    maxId = 101\r\n  }else{\r\n    maxId = Math.max.apply(Math, selectedDrawData.map(function(o) { return o.drawId; })) + 1\r\n  }\r\n\r\n\r\n    const id = `draw-${maxId}`;\r\n    const data = {\r\n      \r\n      customerCount:0,\r\n      startedOn: date,\r\n      status: \"Open\",\r\n      drawId: maxId,\r\n      customer:[]\r\n    }\r\n    await setDoc(doc(collectionRef, id), data);\r\n    const data1 = {\r\n      id:id,\r\n      customerCount:0,\r\n      startedOn: date,\r\n      status: \"Open\",\r\n      drawId: maxId,\r\n      customer:[]\r\n    }\r\n    setDraw(\r\n          produce(selectedDrawData, draft => {\r\n        draft.push(data1);\r\n      })\r\n    )\r\n    //  setIsLoading(false);  \r\n  };\r\n\r\n  \r\n      const checkdraw = async () => {\r\n        if (selectedDrawData.length === 0) {     \r\n            const collectionRef = collection(appdb, 'draw');\r\n            const q = query(collectionRef);\r\n            const data = await onSnapshot(q,(snapshot) => {\r\n              setDraw(\r\n                snapshot.docs.map((doc) => ({\r\n                  id: doc.id,\r\n                  ...doc.data(),\r\n                }))\r\n              )\r\n            });\r\n            return data; \r\n          }\r\n      };\r\n      checkdraw();\r\n\r\n   useEffect(() => {\r\n    setHeaderText(\"Draw\");\r\n\r\n    // const checkdraw = async () => {\r\n    //   if (selectedDrawData.length === 0) {     // setIsLoading(true);\r\n    //       const collectionRef = collection(appdb, 'draw');\r\n    //       const q = query(collectionRef);\r\n    //       const data = await onSnapshot(q,(snapshot) => {\r\n    //         setDraw(\r\n    //           snapshot.docs.map((doc) => ({\r\n    //             id: doc.id,\r\n    //             ...doc.data(),\r\n    //           }))\r\n    //         )\r\n    //       });\r\n    //       return data; \r\n    //     }\r\n    // };\r\n    // checkdraw();\r\n   \r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        sx={{\r\n          display: \"flex\",\r\n          direction: \"row\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Grid\r\n          item\r\n          xs={6}\r\n          sm={6}\r\n          md={6}\r\n          sx={{ justifyContent: \"flex-start\", alignItems: \"center\" }}\r\n        >\r\n           <Grid\r\n          item\r\n          xs={6}\r\n          sm={6}\r\n          md={6}\r\n          sx={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-start\",\r\n          }}\r\n        >\r\n          <IconButton disabled={isLoading} \r\n          onClick={handleAddDraw}\r\n          >\r\n            <AddCircleOutlineIcon color=\"secondary\" />\r\n          </IconButton>\r\n        </Grid>\r\n          \r\n        </Grid>\r\n            <Grid\r\n              item\r\n              xs={6}\r\n              sm={6}\r\n              md={6}\r\n              sx={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"flex-end\",\r\n              }}\r\n            >\r\n        </Grid>\r\n      </Grid>\r\n      {error && <Alert severity=\"error\">{error}</Alert>}\r\n      {isLoading && (\r\n        <Box sx={{ width: \"100%\" }}>\r\n          <LinearProgress />\r\n        </Box>\r\n      )}\r\n\r\n\r\n\r\n      \r\n{selectedDrawData &&\r\n        selectedDrawData.map((d) => (\r\n          <Card\r\n            key={d.id}\r\n            sx={{\r\n              mt: 0.5,\r\n              \"&:before\": {\r\n                display: \"none\",\r\n              },\r\n              borderBottom: \"1px solid #dddddd\",\r\n              borderRadius: \"20px\",\r\n              boxShadow: \"none\"\r\n              //,...(product.prodstatus === \"Dormant\" && {background: \"#eecaca\",}\r\n            }}\r\n          >\r\n            <CardActionArea\r\n            data-drawid={d.id}\r\n            onClick={handleDrawClick}\r\n            >\r\n<CardContent>\r\n                <Grid\r\n                  container\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    direction: \"row\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <Grid\r\n                    item\r\n                    xs={6}\r\n                    sm={6}\r\n                    md={6}\r\n                    lg={12}\r\n                    sx={{ justifyContent: \"flex-start\" }}\r\n                  >\r\n         <Box\r\n      component=\"form\"\r\n      sx={{\r\n        '& .MuiTextField-root': { m: 2, width: '25ch' },\r\n      }}\r\n      noValidate\r\n      autoComplete=\"off\"\r\n    >        \r\n      <>\r\n<TextField\r\n          id=\"standard-read-only-input\"\r\n          label=\"Draw ID\"\r\n          defaultValue={d.id}\r\n          InputProps={{\r\n            readOnly: true,\r\n          }}\r\n          variant=\"standard\"\r\n        />\r\n\r\n<TextField\r\n          id=\"standard-read-only-input\"\r\n          label=\"Draw Status\"\r\n          defaultValue={d.status}\r\n          InputProps={{\r\n            readOnly: true,\r\n          }}\r\n          variant=\"standard\"\r\n        />\r\n        \r\n<TextField\r\n          id=\"standard-read-only-input\"\r\n          label=\"Created On\"\r\n          defaultValue={d.startedOn}\r\n          InputProps={{\r\n            readOnly: true,\r\n          }}\r\n          variant=\"standard\"\r\n        />\r\n<TextField\r\n  id=\"standard-read-only-input\"\r\n  label=\"Total Customer\"\r\n  defaultValue={d.customerCount}\r\n  InputProps={{\r\n    readOnly: true,\r\n  }}\r\n  variant=\"standard\"\r\n/>\r\n</>\r\n    </Box>\r\n                  </Grid>\r\n                  </Grid>\r\n\r\n                  </CardContent>\r\n            </CardActionArea>\r\n          </Card>\r\n        )\r\n        )     \r\n        }\r\n\r\n    </>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport { useState } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport Alert from '@mui/material/Alert';\r\nimport DialogContent from '@mui/material/DialogContent';\r\n//import DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport { appdb } from \"../utils/firebase-config\";\r\nimport {\r\n  collection,\r\n//  onSnapshot,\r\n  setDoc,\r\n  doc,\r\n  query,\r\n  where,\r\n  //orderBy,\r\n  getDocs\r\n} from \"firebase/firestore\";\r\n\r\nexport default function CustomerDialog() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [newUserError, setNewUserError] = useState();\r\n  const [values, setValues] = useState({\r\n    phone: '', name: '', address: ''\r\n  })\r\n\r\n  const set = name => {\r\n    return ({ target: { value } }) => {\r\n      setValues(oldValues => ({...oldValues, [name]: value }));\r\n    }\r\n  };\r\n  \r\n  const handleCancel = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = async () => {\r\n    if(values.name === \"\" || values.phone === \"\" || values.address === \"\"){\r\n      return setNewUserError(\"Form is incomplete\");\r\n    }\r\n    try {\r\n      const collectionRef = collection(appdb, \"customer\");\r\n      const q = query(collectionRef, where(\"phone\", \"==\", values.phone));\r\n      const docs = await getDocs(q);\r\n\r\n      console.log(docs.empty);\r\n      if (docs.empty) {\r\n        try {\r\n          await setDoc(doc(appdb, \"customer\", values.phone), values);\r\n          //setOpenNewUser(false);\r\n        }\r\n    catch(error) {\r\n      console.log(error.message)\r\n      return setNewUserError(error.message);       \r\n  }\r\n}else{\r\n  return setNewUserError(\"User with same email already exists\"); \r\n}\r\n    }catch{\r\n\r\n    }\r\n    \r\n    setOpen(false);\r\n  };\r\n\r\n  \r\n  return (\r\n    <div>\r\n      <Button onClick={handleClickOpen}>\r\n        Create Customer\r\n      </Button>\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle>Customer</DialogTitle>\r\n        {newUserError && <Alert severity=\"error\">{newUserError}</Alert>}\r\n        <DialogContent>\r\n        <TextField\r\n        required\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"phone\"\r\n            label=\"Phone Number\"\r\n            type=\"text\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n            value={values.phone} \r\n            onChange={set('phone')}\r\n          />\r\n        <TextField\r\n        required\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Name\"\r\n            type=\"text\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n            value={values.name} \r\n            onChange={set('name')}\r\n            \r\n          />\r\n          <TextField\r\n          required\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Address\"\r\n            type=\"text\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n            value={values.address} \r\n            onChange={set('address')}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCancel}>Cancel</Button>\r\n          <Button onClick={handleClose}>Create</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport CustomerDialog from \"../components/CustomerDialog\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\n//import AddCircleOutlineIcon from \"@mui/icons-material/AddCircleOutline\";\r\nimport { styled, alpha } from \"@mui/material/styles\";\r\nimport {\r\n  TableContainer,\r\n  TableCell,\r\n  TableBody,\r\n  TableHead,\r\n  TableRow,\r\n  Table,\r\n  Paper,\r\n  Card,\r\n  Box,\r\n  Grid,\r\n  TextField,\r\n  CardContent,\r\n  InputBase,\r\n  Button\r\n} from \"@mui/material\";\r\nimport {\r\n  collection,\r\n  //onSnapshot,\r\n  query,\r\n  where,\r\n  getDocs,\r\n  setDoc,\r\n  doc,\r\n  updateDoc\r\n} from \"firebase/firestore\";\r\nimport { appdb } from \"../utils/firebase-config\";\r\nimport produce from 'immer';\r\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\r\nimport {\r\n  headerTextState,\r\n  manageDrawState,\r\n  newCustomerDraw\r\n} from \"../store/atoms/appState\";\r\n//import SearchIcon from \"@mui/icons-material/Search\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n//import PaymentMethod from \"../components/PaymentType\";\r\n//import PaymentDate from \"../components/PaymentDate\";\r\n//import { FormControlUnstyledContext } from \"@mui/material/node_modules/@mui/base\";\r\n\r\nconst Search = styled(\"div\")(({ theme }) => ({\r\n  position: \"relative\",\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n  \"&:hover\": {\r\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n  },\r\n  marginLeft: 0,\r\n  marginTop: 2,\r\n  width: \"100%\",\r\n  [theme.breakpoints.up(\"sm\")]: {\r\n    marginLeft: theme.spacing(1),\r\n    width: \"auto\",\r\n  },\r\n}));\r\n\r\nconst SearchIconWrapper = styled(\"div\")(({ theme }) => ({\r\n  padding: theme.spacing(0, 0),\r\n  height: \"100%\",\r\n  position: \"absolute\",\r\n  pointerEvents: \"none\",\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n}));\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n  color: \"inherit\",\r\n  \"& .MuiInputBase-input\": {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(2)})`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"35ch\",\r\n      \"&:focus\": {\r\n        width: \"20ch\",\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\n\r\nexport default function ManageDraw() {\r\n  const navigate = useNavigate();\r\n  const setHeaderText = useSetRecoilState(headerTextState);\r\n  //const [error, setError] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [addcustomer, setAddcustomer] = useState(false);\r\n  const [newCustomer, setNewCustomer] = useState(\"\");\r\n  const [localCustomer, setLocalCustomer] = useState();\r\n  const setManageDraw = useSetRecoilState(manageDrawState);\r\n  const manageDraw = useRecoilValue(manageDrawState);\r\n  const newCustDraw = useRecoilValue(newCustomerDraw);\r\n  \r\n  const drawExists = Object.keys(manageDraw).length === 0;\r\n  \r\nconst handleAddCustomer = async (e) =>{\r\n  // let maxId = 1;\r\n  // const test = manageDraw.customer.length > 0\r\n  // console.log(test);\r\n  // if(test != undefined){\r\n  //   maxId = Math.max.apply(Math, manageDraw.customer.map(function(o) { return o.id; })) + 1 \r\n  // }\r\n\r\n\r\n  let maxId = 0;\r\n  const test = manageDraw.customer.length > 0\r\n  console.log(test);\r\n  if(test === undefined || !test){\r\n    maxId = 1\r\n  }else{\r\n    maxId = Math.max.apply(Math, manageDraw.customer.map(function(o) { return o.id; })) + 1 \r\n  }\r\n\r\n\r\n  \r\n          const id = `${maxId}`;\r\n          console.log(\"next available id.....\")\r\n          console.log(id)\r\n          const data = {\r\n            customerId: `${newCustomer}-${id}`,\r\n            customerDrawId: `${manageDraw.id}-${id}`,\r\n            phone: newCustomer,\r\n            id: id,\r\n          }\r\n          console.log(data);\r\n\r\n          try {\r\n            const collectionRef = collection(appdb, \"draw\");\r\n            //await setDoc(doc(collectionRef, manageDraw.id), manageDraw);\r\n            await updateDoc(doc(collectionRef, manageDraw.id), \r\n                produce(manageDraw, draft => {\r\n                  draft.customerCount = id;\r\n                  draft.customer.push(data);\r\n                }\r\n              )\r\n            );\r\n            const collectionRef1 = collection(appdb, \"customerDraw\");\r\n            await setDoc(doc(collectionRef1, data.customerDrawId), \r\n            produce(\r\n              newCustDraw, draft => {\r\n                draft.customerId = data.customerId;\r\n                draft.customerPhone = data.phone;\r\n                draft.customerName = localCustomer.name\r\n              }\r\n            ));\r\n            \r\n          return setManageDraw(\r\n            produce(manageDraw, draft => {\r\n              draft.customerCount = id;\r\n              draft.customer.push(data);\r\n            }\r\n          )\r\n        );\r\n\r\n          }\r\n          catch (e) {\r\n                console.error(\"Error updating document: \", e.message);\r\n                return 0\r\n          }\r\n\r\n}  \r\n\r\nconst handleCustomerSearch = async (e) => {\r\n  if ((e.target.value.toLowerCase()).length >= 10){\r\n    console.log(\"finding customer\")\r\n    const customerId = e.target.value;\r\n    try {\r\n      const collectionRef = collection(appdb, \"customer\");\r\n      const q = query(collectionRef, where(\"phone\", \"==\", customerId));\r\n      const docs = await getDocs(q);\r\n      let allCities = docs;\r\n      for(const doc of allCities.docs){\r\n        setLocalCustomer(doc.data());\r\n      }\r\n      if (!docs.empty) {\r\n        setAddcustomer(true)\r\n        setNewCustomer(customerId)\r\n         \r\n      }\r\n    }\r\n    catch{\r\n    }  \r\n  }else{\r\n    setAddcustomer(false) \r\n  }\r\n}\r\n\r\nuseEffect(() => {\r\nsetHeaderText(\"Manage Draw\"); \r\n  \r\n    \r\n  const checkDraw = () => {\r\n    if (drawExists) {\r\n      console.log('switching........');\r\n      navigate(\"/draw\");\r\n    }else{\r\n      console.log('not switching........'); \r\n    }\r\n  };\r\n  \r\n  checkDraw();\r\n  \r\n\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n     \r\n      \r\n{!drawExists && \r\n          <Card\r\n            key={manageDraw.id}\r\n            sx={{\r\n              mt: 0.5,\r\n              \"&:before\": {\r\n                display: \"none\",\r\n              },\r\n              borderBottom: \"1px solid #dddddd\",\r\n              borderRadius: \"20px\",\r\n              boxShadow: \"none\"\r\n              //,...(product.prodstatus === \"Dormant\" && {background: \"#eecaca\",}\r\n            }}\r\n          >\r\n            \r\n<CardContent>\r\n                <Grid\r\n                  container\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    direction: \"row\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <Grid\r\n                    item\r\n                    xs={6}\r\n                    sm={6}\r\n                    md={6}\r\n                    lg={12}\r\n                    sx={{ justifyContent: \"flex-start\" }}\r\n                  >\r\n         <Box\r\n      component=\"form\"\r\n      sx={{\r\n        '& .MuiTextField-root': { m: 2, width: '25ch' },\r\n      }}\r\n      noValidate\r\n      autoComplete=\"off\"\r\n    >        \r\n      <>\r\n<TextField\r\n          id=\"standard-read-only-input\"\r\n          label=\"Draw ID\"\r\n          defaultValue={manageDraw.id}\r\n          InputProps={{\r\n            readOnly: true,\r\n          }}\r\n          variant=\"standard\"\r\n        />\r\n\r\n<TextField\r\n          id=\"standard-read-only-input\"\r\n          label=\"Draw Status\"\r\n          defaultValue={manageDraw.status}\r\n          InputProps={{\r\n            readOnly: true,\r\n          }}\r\n          variant=\"standard\"\r\n        />\r\n        \r\n<TextField\r\n          id=\"standard-read-only-input\"\r\n          label=\"Created On\"\r\n          defaultValue={manageDraw.startedOn}\r\n          InputProps={{\r\n            readOnly: true,\r\n          }}\r\n          variant=\"standard\"\r\n        />\r\n<TextField\r\n  id=\"standard-read-only-input\"\r\n  label=\"Total Customer\"\r\n  value={manageDraw.customerCount}\r\n  //value={manageDraw.customer.map((c) => ( c.customerCount))}\r\n  InputProps={{\r\n    readOnly: true,\r\n  }}\r\n  variant=\"standard\"\r\n/>\r\n</>\r\n    </Box>\r\n                  </Grid>\r\n                  </Grid>\r\n\r\n                  <Grid\r\n          item\r\n          xs={6}\r\n          sm={6}\r\n          md={6}\r\n          sx={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-start\",\r\n          }}\r\n        >\r\n          {/* <IconButton disabled={isLoading} \r\n          //onClick={handleAddProduct}\r\n          >\r\n            <AddCircleOutlineIcon color=\"secondary\" />\r\n          </IconButton> */}\r\n\r\n          <CustomerDialog></CustomerDialog>\r\n        </Grid>\r\n\r\n        <Grid\r\n          item\r\n          xs={6}\r\n          sm={6}\r\n          md={6}\r\n          sx={{ justifyContent: \"flex-start\", alignItems: \"center\" }}\r\n        >\r\n          <Search>\r\n            <SearchIconWrapper>\r\n              <SearchIcon />\r\n            </SearchIconWrapper>\r\n            <StyledInputBase\r\n              placeholder=\"Enter customer phone...\"\r\n              inputProps={{ \"aria-label\": \"search\" }}\r\n              onChange={\r\n               handleCustomerSearch\r\n              }\r\n            />\r\n          </Search>\r\n         \r\n        </Grid>\r\n        { addcustomer &&\r\n             <Button disabled={isLoading} \r\n             onClick={handleAddCustomer}\r\n             >\r\n               Add Customer\r\n             </Button>\r\n          }\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          sm={12}\r\n          md={12}\r\n          lg={12}\r\n          sx={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-start\",\r\n          }}\r\n        >\r\n\r\n\r\n<TableContainer component={Paper}\r\nsx={{\r\n    mt: 2.0,\r\n    \"&:before\": {\r\n      display: \"none\",\r\n    },\r\n  }\r\n}\r\n>\r\n      <Table sx={{ minWidth: 700 }} aria-label=\"simple table\" size=\"small\">\r\n        <TableHead>\r\n          <TableRow>\r\n          <TableCell>ID</TableCell>\r\n            <TableCell>Customer Phone</TableCell>\r\n            <TableCell>Customer Draw ID</TableCell>\r\n            <TableCell>Customer ID</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {manageDraw.customer && manageDraw.customer.map((c) => (                     \r\n            <TableRow key={c.id}\r\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n            >\r\n              <TableCell component=\"th\" scope=\"row\">{\r\n              c.id              \r\n              }\r\n               \r\n              </TableCell> \r\n              <TableCell component=\"th\" scope=\"row\">{\r\n              c.phone              \r\n              }\r\n               \r\n              </TableCell>              \r\n              <TableCell>\r\n              {c.customerDrawId}\r\n              </TableCell>\r\n              <TableCell>\r\n              {c.customerId}\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n\r\n          </Grid>\r\n                  </CardContent>\r\n        \r\n          </Card>\r\n  \r\n      \r\n        }\r\n      \r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport CustomerDialog from \"../components/CustomerDialog\";\r\nimport {\r\n  Alert,\r\n  Card,\r\n  Box,\r\n  LinearProgress,\r\n  Grid,\r\n  Typography,\r\n  CardContent,\r\n  CardActionArea,\r\n  InputBase,\r\n  IconButton,\r\n  TextField\r\n} from \"@mui/material\";\r\n\r\nimport { styled, alpha } from \"@mui/material/styles\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport AddCircleOutlineIcon from \"@mui/icons-material/AddCircleOutline\";\r\nimport { useRecoilState,  useSetRecoilState } from \"recoil\";\r\nimport {\r\n  headerTextState,\r\n  customerSearchState,\r\n  customerState,\r\n  selectedCustomerState,\r\n  allCustomerState\r\n} from \"../store/atoms/appState\";\r\nimport {\r\n  collection,\r\n  onSnapshot,\r\n  query,\r\n  where,\r\n} from \"firebase/firestore\";\r\nimport { appdb, auth } from \"../utils/firebase-config\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Search = styled(\"div\")(({ theme }) => ({\r\n  position: \"relative\",\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n  \"&:hover\": {\r\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n  },\r\n  marginLeft: 0,\r\n  marginTop: 2,\r\n  width: \"100%\",\r\n  [theme.breakpoints.up(\"sm\")]: {\r\n    marginLeft: theme.spacing(1),\r\n    width: \"auto\",\r\n  },\r\n}));\r\n\r\nconst SearchIconWrapper = styled(\"div\")(({ theme }) => ({\r\n  padding: theme.spacing(0, 2),\r\n  height: \"100%\",\r\n  position: \"absolute\",\r\n  pointerEvents: \"none\",\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n}));\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n  color: \"inherit\",\r\n  \"& .MuiInputBase-input\": {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"18ch\",\r\n      \"&:focus\": {\r\n        width: \"20ch\",\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function ManageCustomer() {\r\n  // const user = useRecoilValue(userDetailsState);\r\n  // const months = useRecoilValue(monthState);\r\n  const setHeaderText = useSetRecoilState(headerTextState);\r\n  const [allCustomers, setAllCustomer ] = useRecoilState(allCustomerState);\r\n  const [error, setError] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n const navigate = useNavigate();\r\n\r\n   //////////////////EDIT Customer/////////////\r\n\r\n  \r\n   const checkCustomer = async () => {\r\n    if (allCustomers.length === 0) {     // setIsLoading(true);\r\n      //setIsLoading(true);\r\n      const collectionRef = query(\r\n        collection(appdb, \"customer\")\r\n      );\r\n      await onSnapshot(collectionRef,(snapshot) => {\r\n        setAllCustomer(\r\n            snapshot.docs.map((doc) => ({\r\n              id: doc.id,\r\n              ...doc.data(),\r\n            }))\r\n          )        \r\n      },\r\n        (error) => {\r\n          setError(error);\r\n        }\r\n      );\r\n      //setIsLoading(false);\r\n      }\r\n  };\r\n  checkCustomer();\r\n\r\n  // const handleCustomerSearch = async (e) => {\r\n  //   if ((e.target.value.toLowerCase()).length >= 10)\r\n  //   {\r\n  //   setIsLoading(true);\r\n  //       const collectionRef = query(\r\n  //         collection(appdb, \"customerDraw\"),\r\n  //         where(\"customerPhone\", \"==\", e.target.value.toLowerCase())\r\n  //       );\r\n  //       await onSnapshot(collectionRef,(snapshot) => {\r\n  //         setDispCustomer(\r\n  //             snapshot.docs.map((doc) => ({\r\n  //               id: doc.id,\r\n  //               ...doc.data(),\r\n  //             }))\r\n  //           )        \r\n  //       },\r\n  //         (error) => {\r\n  //           setError(error);\r\n  //         }\r\n  //       );\r\n  //       setIsLoading(false);\r\n  //   }\r\n  // };\r\n\r\n   useEffect(() => {\r\n    setHeaderText(\"Customers\");\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        sx={{\r\n          display: \"flex\",\r\n          direction: \"row\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Grid\r\n          item\r\n          xs={6}\r\n          sm={6}\r\n          md={6}\r\n          sx={{ justifyContent: \"flex-start\", alignItems: \"center\" }}\r\n        >\r\n          <Search>\r\n            <SearchIconWrapper>\r\n              <SearchIcon />\r\n            </SearchIconWrapper>\r\n            <StyledInputBase\r\n              placeholder=\"Search Customer..\"\r\n              inputProps={{ \"aria-label\": \"search\" }}\r\n              // onChange={\r\n              //  handleCustomerSearch\r\n              // }\r\n            />\r\n          </Search>\r\n          \r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={6}\r\n          sm={6}\r\n          md={6}\r\n          sx={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n          }}\r\n        >\r\n          {/* <IconButton disabled={isLoading} \r\n          //onClick={handleAddProduct}\r\n          >\r\n            <AddCircleOutlineIcon color=\"secondary\" />\r\n          </IconButton> */}\r\n\r\n          <CustomerDialog></CustomerDialog>\r\n        </Grid>\r\n      </Grid>\r\n      {error && <Alert severity=\"error\">{error}</Alert>}\r\n      {isLoading && (\r\n        <Box sx={{ width: \"100%\" }}>\r\n          <LinearProgress />\r\n        </Box>\r\n      )}\r\n\r\n{allCustomers &&\r\n        allCustomers.map((customer) => (\r\n          <Card\r\n            key={customer.id}\r\n            sx={{\r\n              mt: 0.5,\r\n              \"&:before\": {\r\n                display: \"none\",\r\n              },\r\n              borderBottom: \"1px solid #dddddd\",\r\n              borderRadius: \"20px\",\r\n              boxShadow: \"none\"\r\n              //,...(product.prodstatus === \"Dormant\" && {background: \"#eecaca\",}\r\n            }}\r\n          >\r\n            <CardActionArea\r\n            data-custid={customer.id}\r\n            // onClick={handleEditCustomer}\r\n            >\r\n<CardContent>\r\n                <Grid\r\n                  container\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    direction: \"row\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <Grid\r\n                    item\r\n                    xs={6}\r\n                    sm={6}\r\n                    md={6}\r\n                    sx={{ justifyContent: \"flex-start\" }}\r\n                  >\r\n<Box\r\n      component=\"form\"\r\n      sx={{\r\n        '& .MuiTextField-root': { m: 1, width: '20ch' },\r\n      }}\r\n      noValidate\r\n      autoComplete=\"off\"\r\n    >   \r\n    <>\r\n<TextField\r\n          id=\"standard-read-only-input\"\r\n          label=\"Customer Name\"\r\n          defaultValue={customer.name}\r\n          InputProps={{\r\n            readOnly: true,\r\n          }}\r\n          variant=\"standard\"\r\n        />\r\n\r\n<TextField\r\n          id=\"standard-read-only-input\"\r\n          label=\"Phone\"\r\n          defaultValue={customer.id}\r\n          InputProps={{\r\n            readOnly: true,\r\n          }}\r\n          variant=\"standard\"\r\n        />\r\n<TextField\r\n          id=\"standard-read-only-input\"\r\n          label=\"Customer Address\"\r\n          defaultValue={customer.address}\r\n          InputProps={{\r\n            readOnly: true,\r\n          }}\r\n          variant=\"standard\"\r\n        />\r\n\r\n        </>\r\n    </ Box>\r\n\r\n                  </Grid>\r\n                  </Grid>\r\n\r\n                  </CardContent>\r\n            </CardActionArea>\r\n          </Card>\r\n        )\r\n        )}\r\n\r\n             \r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Navigate, Routes, Route, useLocation } from \"react-router-dom\";\r\nimport { AuthProvider, useAuth } from \"./contexts/AuthContext\";\r\nimport { RecoilRoot } from \"recoil\";\r\n\r\nimport LoginPage from \"./pages/LoginPage\";\r\nimport ForgetPassword from \"./pages/ForgetPassword\";\r\nimport AppLayout from \"./pages/AppLayout\";\r\nimport Customer from \"./pages/Customer\";\r\n// import CreateCustomer from \"./pages/CreateCustomer\";\r\n// import Products from \"./pages/Products\";\r\n// import Visits from \"./pages/Visits\";\r\n// import CreateVisits from \"./pages/CreateVisits\";\r\n// import DisplayExpenses from \"./pages/DisplayExpenses\";\r\nimport Home from \"./pages/Home\";\r\nimport Users from \"./pages/Users\";\r\nimport EditCustomer from \"./pages/EditCustomer\";\r\nimport Draw from \"./pages/Draw\";\r\nimport ManageDraw from \"./pages/ManageDraw\";\r\nimport ManageCustomer from \"./pages/ManageCustomer\";\r\n\r\nfunction RequireAuth({ children }) {\r\n  const { currentUser } = useAuth();\r\n  const location = useLocation();\r\n\r\n  return currentUser ? (\r\n    children\r\n  ) : (\r\n    <Navigate to=\"/login\" replace state={{ path: location.pathname }} />\r\n  );\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"root\">\r\n      <RecoilRoot>\r\n        <AuthProvider>\r\n          <Routes>\r\n            <Route path=\"/login\" element={<LoginPage />} />\r\n            <Route path=\"/forgot-password\" element={<ForgetPassword />} />\r\n            <Route\r\n              path=\"/\"\r\n              element={\r\n                <RequireAuth>\r\n                  <AppLayout />\r\n                </RequireAuth>\r\n              }\r\n            >\r\n              <Route path=\"/\" element={<Home />} />\r\n              {/* <Route path=\"visits\" element={<Visits />}>\r\n                <Route path=\"editvisit\" element={<EditVisit />} />\r\n              </Route>\r\n              <Route path=\"createvisits\" element={<CreateVisits />} />              \r\n              <Route path=\"expenses\" element={<DisplayExpenses />} />\r\n              <Route path=\"customers\" element={<DisplayCustomers />} />\r\n              <Route path=\"createcustomer\" element={<CreateCustomer />} /> */}\r\n              <Route path=\"customer\" element={<Customer />} /> \r\n              <Route path=\"editcustomer\" element={<EditCustomer />} />\r\n              <Route path=\"users\" element={<Users />} />\r\n              <Route path=\"draw\" element={<Draw />} />\r\n              <Route path=\"managedraw\" element={<ManageDraw />} />\r\n              <Route path=\"managecustomer\" element={<ManageCustomer />} />\r\n            </Route>\r\n          </Routes>\r\n        </AuthProvider>\r\n      </RecoilRoot>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { CssBaseline } from \"@mui/material\";\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <CssBaseline>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </CssBaseline>\r\n  </React.StrictMode>,\r\n  rootElement\r\n);\r\n\r\nserviceWorkerRegistration.register();\r\n"],"sourceRoot":""}